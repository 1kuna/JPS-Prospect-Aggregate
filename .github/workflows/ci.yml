name: Backend CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Ruff lint
        run: ruff check app tests

      - name: Create test environment file
        run: |
          cat > .env <<'EOF'
          FLASK_ENV=testing
          TESTING=True
          DATABASE_URL=sqlite:///test_jps_aggregate.db
          USER_DATABASE_URL=sqlite:///test_jps_users.db
          SECRET_KEY=test-secret-key-for-ci
          ENVIRONMENT=testing
          EOF

      - name: Initialize database
        run: |
          python -c "
          from app import create_app
          from app.database import db
          app = create_app()
          with app.app_context():
              db.create_all()
          "

      - name: Run backend tests
        env:
          PYTHONPATH: .
        run: python -m pytest -q

  frontend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend-react/package-lock.json

      - name: Install dependencies
        working-directory: frontend-react
        run: npm ci

      - name: Lint frontend
        working-directory: frontend-react
        run: npm run lint

      - name: Run unit tests
        working-directory: frontend-react
        run: npm run test -- --run

      - name: Build frontend
        working-directory: frontend-react
        run: npm run build
