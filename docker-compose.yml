# JPS Prospect Aggregate - Docker Compose Configuration
# Simplified setup with SQLite database

services:
  web:
    build: .
    image: jps-prospect-aggregate:latest
    container_name: jps-web
    restart: unless-stopped
    ports:
      - "5001:5001"
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY}
      - FILE_FRESHNESS_SECONDS=86400
      - OLLAMA_BASE_URL=http://ollama:11434
    volumes:
      # Mount data directory for SQLite databases
      - ./data:/app/data
      # Mount logs directory
      - ./logs:/app/logs
      # Mount backups directory
      - ./backups:/app/backups
    depends_on:
      ollama:
        condition: service_healthy
    networks:
      - jps-network

  ollama:
    image: ollama/ollama:latest
    container_name: jps-ollama
    restart: unless-stopped
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "11434:11434"
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_MODELS=/root/.ollama/models
    entrypoint: >
      sh -c "
        echo 'Starting Ollama service with automatic model installation...' &&
        ollama serve &
        OLLAMA_PID=$$! &&
        sleep 15 &&
        echo 'Waiting for Ollama server to be ready...' &&
        for i in \$$(seq 1 30); do
          if curl -s http://localhost:11434/api/version > /dev/null 2>&1; then
            echo 'Ollama server is ready!'
            break
          fi
          if [ \$$i -eq 30 ]; then
            echo 'ERROR: Ollama server failed to start after 60 seconds'
            exit 1
          fi
          echo \"Waiting for Ollama server... attempt \$$i/30\"
          sleep 2
        done &&
        echo 'Checking if qwen3:latest model is already installed...' &&
        if ! ollama list | grep -q 'qwen3:latest'; then
          echo 'Downloading qwen3:latest model (5.2GB - this may take several minutes)...' &&
          ollama pull qwen3:latest &&
          echo 'Successfully downloaded qwen3:latest model!'
        else
          echo 'qwen3:latest model is already installed!'
        fi &&
        echo 'Verifying model installation...' &&
        if ollama list | grep -q 'qwen3:latest'; then
          echo 'âœ“ qwen3:latest model is ready for use!'
        else
          echo 'ERROR: Model installation verification failed'
          exit 1
        fi &&
        echo 'Ollama initialization complete - service ready!' &&
        wait $$OLLAMA_PID
      "
    healthcheck:
      test: >
        sh -c "
          curl -f http://localhost:11434/api/version >/dev/null 2>&1 &&
          ollama list | grep -q 'qwen3:latest' || exit 1
        "
      interval: 30s
      timeout: 15s
      retries: 10
      start_period: 300s  # Allow 5 minutes for model download on first startup
    deploy:
      resources:
        limits:
          memory: 8G
    networks:
      - jps-network

  # Cloudflare tunnel (optional - only runs when CLOUDFLARE_TUNNEL_TOKEN is set)
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: jps-cloudflared
    restart: unless-stopped
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}
    networks:
      - jps-network
    depends_on:
      - web
    profiles:
      - cloudflare

volumes:
  ollama_data:

networks:
  jps-network:
    driver: bridge