# JPS Prospect Aggregate - Docker Compose Configuration
# Simplified setup using single .env file

services:
  web:
    build: .
    image: jps-prospect-aggregate:latest
    container_name: jps-web
    restart: unless-stopped
    ports:
      - "5001:5001"
    env_file:
      - .env  # Load all variables from .env
    environment:
      # Override database paths for Docker container
      - DATABASE_URL=sqlite:////app/data/jps_aggregate.db
      - USER_DATABASE_URL=sqlite:////app/data/jps_users.db
      # Ensure Ollama uses Docker network
      - OLLAMA_BASE_URL=http://ollama:11434
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./backups:/app/backups
    depends_on:
      - ollama
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  ollama:
    image: ollama/ollama:latest
    container_name: jps-ollama
    restart: unless-stopped
    volumes:
      - ollama-data:/root/.ollama
    networks:
      - app-network
    deploy:
      resources:
        reservations:
          memory: 4G
    environment:
      - OLLAMA_MODELS=/root/.ollama/models
    command: serve

  # Optional: Cloudflare tunnel for production
  # Only runs when --profile cloudflare is used
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: jps-cloudflared
    restart: unless-stopped
    profiles:
      - cloudflare
    command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TUNNEL_TOKEN}
    networks:
      - app-network
    depends_on:
      - web

volumes:
  ollama-data:
    driver: local

networks:
  app-network:
    driver: bridge