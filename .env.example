# JPS Prospect Aggregate - Environment Configuration
# Copy this file to .env and run ./launch.sh to get started

# ==============================
# REQUIRED: Environment Type
# ==============================
# Set to "development" for local or "production" for Docker
ENVIRONMENT=development

# ==============================
# REQUIRED: Security
# ==============================
# Generate with: python -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY=CHANGE_THIS_TO_A_RANDOM_STRING

# ==============================
# Application Settings
# ==============================
HOST=127.0.0.1  # Use 0.0.0.0 for production
PORT=5001
FLASK_APP=run.py

# ==============================
# Database Configuration
# ==============================
# DO NOT SET THESE - Leave commented for portability!
# The app uses relative paths and converts to absolute at runtime
# DATABASE_URL=
# USER_DATABASE_URL=

# SQLite performance settings
SQLITE_JOURNAL_MODE=WAL
SQLITE_SYNCHRONOUS=NORMAL
SQLITE_CACHE_SIZE=-64000

# ==============================
# Environment-Specific Settings
# ==============================
# Development settings
DEBUG=True
FLASK_ENV=development
LOG_LEVEL=DEBUG
SQL_ECHO=False

# Production settings (uncomment and modify for production)
# DEBUG=False
# FLASK_ENV=production
# LOG_LEVEL=INFO
# SESSION_COOKIE_SECURE=True
# SESSION_COOKIE_HTTPONLY=True
# SESSION_COOKIE_SAMESITE=Lax
# PERMANENT_SESSION_LIFETIME=3600
# WTF_CSRF_ENABLED=True

# ==============================
# Application Features
# ==============================
# File processing
FILE_FRESHNESS_SECONDS=86400

# Feature flags
ENABLE_LLM_ENHANCEMENT=True
ENABLE_DUPLICATE_DETECTION=True
ENABLE_AUTO_ARCHIVAL=True

# ==============================
# Scraper Configuration
# ==============================
# Playwright timeouts (milliseconds)
PAGE_NAVIGATION_TIMEOUT=60000
PAGE_ELEMENT_TIMEOUT=30000
TABLE_LOAD_TIMEOUT=60000
DOWNLOAD_TIMEOUT=60000
PLAYWRIGHT_TIMEOUT=60000

# Scraper behavior
SCRAPER_TIMEOUT=120
SCRAPER_RETRY_ATTEMPTS=3
SCRAPE_INTERVAL_HOURS=24
HEALTH_CHECK_INTERVAL_MINUTES=10

# ==============================
# LLM Integration (Ollama)
# ==============================
# For Docker: http://ollama:11434
# For local: http://localhost:11434
OLLAMA_BASE_URL=http://localhost:11434
OLLAMA_MODEL=qwen3:latest

# ==============================
# Performance Settings
# ==============================
SQLALCHEMY_POOL_SIZE=10
SQLALCHEMY_POOL_RECYCLE=3600
SQLALCHEMY_MAX_OVERFLOW=20

# Production server settings
WORKERS=12
TIMEOUT=120

# ==============================
# File Upload Settings
# ==============================
MAX_CONTENT_LENGTH=104857600
UPLOAD_FOLDER=/opt/jps/uploads

# ==============================
# Logging Configuration
# ==============================
LOG_FILE_MAX_BYTES=5242880
LOG_FILE_BACKUP_COUNT=3
LOG_FILE=/opt/jps/logs/app.log

# ==============================
# External Services
# ==============================
# Cloudflare Tunnel (optional)
# Get token from: Cloudflare Dashboard → Zero Trust → Tunnels
# CLOUDFLARE_TUNNEL_TOKEN=your-cloudflare-tunnel-token-here

# Backup settings
BACKUP_RETENTION_DAYS=7
BACKUP_DIRECTORY=backups

# ==============================
# Frontend Settings
# ==============================
REACT_DEV_MODE=False
REACT_FORCE_REBUILD=False

# ==============================
# QUICK SETUP GUIDE
# ==============================
# 1. Copy this file: cp .env.example .env
# 2. Generate SECRET_KEY: python -c "import secrets; print(secrets.token_hex(32))"
# 3. Run the launcher: ./launch.sh
# 
# The launcher will:
# - Configure everything based on ENVIRONMENT setting
# - Install dependencies if needed
# - Set up databases automatically
# - Start the appropriate services
#
# To start directly: ./launch.sh --dev or ./launch.sh --prod