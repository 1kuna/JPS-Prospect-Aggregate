# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
repos:
  # General code quality
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: ^.*\.(md|rst)$
      - id: end-of-file-fixer
        exclude: ^.*\.(md|rst)$
      - id: check-yaml
        args: [--unsafe]
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-merge-conflict
      - id: debug-statements
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable

  # Python formatting and linting
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.15
    hooks:
      # Linter
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
      # Formatter
      - id: ruff-format

  # Python type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies:
          - types-requests
          - types-python-dateutil
        args: [--ignore-missing-imports]
        exclude: ^(migrations/|tests/|scripts/)

  # Python security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-c, pyproject.toml]
        additional_dependencies: ["bandit[toml]"]
        exclude: ^tests/

  # Frontend linting and formatting
  - repo: local
    hooks:
      - id: eslint
        name: ESLint (frontend)
        entry: bash -c 'cd frontend-react && npm run lint'
        language: system
        files: ^frontend-react/.*\.(ts|tsx|js|jsx)$
        pass_filenames: false
        
      - id: typescript-check
        name: TypeScript Check (frontend)
        entry: bash -c 'cd frontend-react && npx tsc --noEmit'
        language: system
        files: ^frontend-react/.*\.(ts|tsx)$
        pass_filenames: false

  # Python tests (only run on Python file changes)
  - repo: local
    hooks:
      - id: pytest-check
        name: pytest
        entry: python -m pytest tests/ -x --ff
        language: system
        files: ^(app/|tests/).*\.py$
        pass_filenames: false

  # Frontend tests (only run on frontend changes)
  - repo: local
    hooks:
      - id: vitest-check
        name: Vitest (frontend)
        entry: bash -c 'cd frontend-react && npm run test -- --run --reporter=verbose'
        language: system
        files: ^frontend-react/.*\.(ts|tsx|js|jsx)$
        pass_filenames: false

  # Git commit message formatting
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # Documentation
  - repo: https://github.com/codespell-project/codespell
    rev: v2.2.6
    hooks:
      - id: codespell
        additional_dependencies:
          - tomli
        exclude: |
          (?x)^(
              .*\.lock|
              .*\.min\.(js|css)|
              frontend-react/node_modules/.*|
              .*\.log
          )$

  # Security scanning for frontend dependencies
  - repo: local
    hooks:
      - id: npm-audit
        name: NPM Audit (frontend)
        entry: bash -c 'cd frontend-react && npm audit --audit-level moderate'
        language: system
        files: ^frontend-react/(package\.json|package-lock\.json)$
        pass_filenames: false

# Configuration
default_stages: [commit]
fail_fast: false
minimum_pre_commit_version: '2.20.0'

# Exclude patterns
exclude: |
  (?x)^(
      migrations/.*|
      \.venv/.*|
      venv/.*|
      env/.*|
      __pycache__/.*|
      \.pytest_cache/.*|
      \.mypy_cache/.*|
      \.ruff_cache/.*|
      node_modules/.*|
      dist/.*|
      build/.*|
      htmlcov/.*|
      \.coverage.*|
      coverage\.xml|
      playwright-report/.*|
      test-results/.*
  )$