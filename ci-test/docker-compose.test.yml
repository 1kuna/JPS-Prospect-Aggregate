services:
  # Python test runner - matches CI environment
  python-test:
    build:
      context: ..
      dockerfile: ci-test/Dockerfile.python-test
    env_file:
      - ../.env.test
    environment:
      - CI=true
      - PYTHONPATH=/app
    volumes:
      - ..:/app
      - pytest_cache:/app/.pytest_cache
      - python_cache:/root/.cache
      # Mount test databases in volume
      - test_databases:/app/test_data
    working_dir: /app
    command: sleep infinity  # Keep container running

  # Frontend test runner - matches CI environment  
  frontend-test:
    build:
      context: ..
      dockerfile: ci-test/Dockerfile.frontend-test
    env_file:
      - ../.env.test
    environment:
      - CI=true
      - NODE_ENV=test
    volumes:
      - ..:/app
      - node_modules:/app/frontend-react/node_modules
      - npm_cache:/root/.npm
    working_dir: /app
    command: sleep infinity  # Keep container running

  # Full app for integration/E2E tests
  web:
    build:
      context: ..
      dockerfile: Dockerfile
    env_file:
      - ../.env.test
    environment:
      - FLASK_ENV=testing
      - TESTING=True
    ports:
      - "5002:5001"  # Different port for test instance
    volumes:
      - ..:/app
      # Mount test databases
      - test_databases:/app/data
    command: python run.py

volumes:
  pytest_cache:
  python_cache:
  node_modules:
  npm_cache:
  test_databases: