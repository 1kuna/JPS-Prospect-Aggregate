[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test output
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --cov=app
    --cov-report=html
    --cov-report=term-missing
    --cov-fail-under=80

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    scraper: marks tests as scraper tests
    asyncio: marks tests as asynchronous tests using asyncio
    api: marks tests as API endpoint tests
    security: marks tests as security-related tests
    performance: marks tests as performance benchmarks

# Test environment
env =
    FLASK_ENV = testing
    TESTING = True

# Coverage configuration
[coverage:run]
source = app
omit = 
    */tests/*
    */venv/*
    */env/*
    app/config.py
    app/__init__.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING: