"use strict";(self["webpackChunkjps_prospect_aggregate_frontend"]=self["webpackChunkjps_prospect_aggregate_frontend"]||[]).push([[301],{7301:(e,a,t)=>{t.r(a),t.d(a,{default:()=>D});var s=t(6768),r=t(4232);const l={class:"d-flex align-center mb-4"},i={key:3},o={class:"d-flex align-center mb-2"},c={class:"text-body-2 text-medium-emphasis text-truncate"},n={class:"d-flex align-center mb-2"},d={class:"text-body-2 text-medium-emphasis"},u={class:"d-flex align-center"},h={class:"text-body-2 text-medium-emphasis"},b={key:0,class:"d-flex align-center mt-2"},m={class:"text-body-2 text-medium-emphasis"},k=["innerHTML"];function p(e,a,t,p,g,f){const v=(0,s.g2)("v-alert"),w=(0,s.g2)("v-spacer"),y=(0,s.g2)("v-chip"),_=(0,s.g2)("v-progress-linear"),D=(0,s.g2)("v-icon"),F=(0,s.g2)("v-card-title"),S=(0,s.g2)("v-divider"),C=(0,s.g2)("v-btn"),W=(0,s.g2)("v-col"),x=(0,s.g2)("v-row"),A=(0,s.g2)("v-card-text"),L=(0,s.g2)("v-card"),I=(0,s.g2)("v-avatar"),H=(0,s.g2)("v-card-subtitle"),z=(0,s.g2)("v-card-item"),$=(0,s.g2)("v-card-actions"),T=(0,s.g2)("v-text-field"),E=(0,s.g2)("v-dialog"),N=(0,s.g2)("v-snackbar");return(0,s.uX)(),(0,s.CE)("div",null,[e.hasError?((0,s.uX)(),(0,s.Wv)(v,{key:0,type:"error",dismissible:"",variant:"tonal",border:"start",class:"mb-4"},{default:(0,s.k6)((()=>[(0,s.eW)((0,r.v_)(e.errorMessage),1)])),_:1})):(0,s.Q3)("",!0),(0,s.Lk)("div",l,[a[5]||(a[5]=(0,s.Lk)("h1",{class:"text-h4 font-weight-bold"},"Data Sources",-1)),(0,s.bF)(w),e.lastUpdated?((0,s.uX)(),(0,s.Wv)(y,{key:0,color:"primary",size:"small",variant:"outlined","prepend-icon":"mdi-clock-outline"},{default:(0,s.k6)((()=>[(0,s.eW)(" Last updated: "+(0,r.v_)(f.formatDate(e.lastUpdated)),1)])),_:1})):(0,s.Q3)("",!0)]),e.isLoading?((0,s.uX)(),(0,s.Wv)(_,{key:1,indeterminate:"",color:"primary",class:"mb-4"})):e.dataSources&&0!==e.dataSources.length?(0,s.Q3)("",!0):((0,s.uX)(),(0,s.Wv)(v,{key:2,type:"info",variant:"tonal",border:"start",icon:"mdi-information-outline"},{default:(0,s.k6)((()=>a[6]||(a[6]=[(0,s.eW)(" No data sources available. Click the refresh button to load data. ")]))),_:1})),(0,s.bF)(L,{elevation:"1",class:"mb-6"},{default:(0,s.k6)((()=>[(0,s.bF)(F,{class:"py-3 px-6"},{default:(0,s.k6)((()=>[(0,s.bF)(D,{size:"small",color:"primary",class:"mr-2"},{default:(0,s.k6)((()=>a[7]||(a[7]=[(0,s.eW)("mdi-tools")]))),_:1}),a[8]||(a[8]=(0,s.eW)(" Advanced Features "))])),_:1}),(0,s.bF)(S),(0,s.bF)(A,{class:"py-4"},{default:(0,s.k6)((()=>[(0,s.bF)(x,null,{default:(0,s.k6)((()=>[(0,s.bF)(W,{cols:"12",md:"6",lg:"3"},{default:(0,s.k6)((()=>[(0,s.bF)(C,{block:"",color:"primary",variant:"tonal","prepend-icon":"mdi-database-refresh",onClick:f.rebuildDatabase,class:"mb-2"},{default:(0,s.k6)((()=>a[9]||(a[9]=[(0,s.eW)(" Rebuild Database ")]))),_:1},8,["onClick"])])),_:1}),(0,s.bF)(W,{cols:"12",md:"6",lg:"3"},{default:(0,s.k6)((()=>[(0,s.bF)(C,{block:"",color:"primary",variant:"tonal","prepend-icon":"mdi-database-plus",onClick:f.initializeDatabase,class:"mb-2"},{default:(0,s.k6)((()=>a[10]||(a[10]=[(0,s.eW)(" Initialize Database ")]))),_:1},8,["onClick"])])),_:1}),(0,s.bF)(W,{cols:"12",md:"6",lg:"3"},{default:(0,s.k6)((()=>[(0,s.bF)(C,{block:"",color:"error",variant:"tonal","prepend-icon":"mdi-delete",onClick:f.deleteAllFiles,class:"mb-2"},{default:(0,s.k6)((()=>a[11]||(a[11]=[(0,s.eW)(" Delete All Files ")]))),_:1},8,["onClick"])])),_:1}),(0,s.bF)(W,{cols:"12",md:"6",lg:"3"},{default:(0,s.k6)((()=>[(0,s.bF)(C,{block:"",color:"warning",variant:"tonal","prepend-icon":"mdi-heart-pulse",onClick:f.runHealthChecks,class:"mb-2"},{default:(0,s.k6)((()=>a[12]||(a[12]=[(0,s.eW)(" Run Health Checks ")]))),_:1},8,["onClick"])])),_:1})])),_:1})])),_:1})])),_:1}),e.dataSources&&e.dataSources.length>0?((0,s.uX)(),(0,s.CE)("div",i,[(0,s.bF)(x,null,{default:(0,s.k6)((()=>[((0,s.uX)(!0),(0,s.CE)(s.FK,null,(0,s.pI)(f.sourcesWithStatus,((e,t)=>((0,s.uX)(),(0,s.Wv)(W,{key:t,cols:"12",md:"6",lg:"4",class:"d-flex"},{default:(0,s.k6)((()=>[(0,s.bF)(L,{elevation:"1",class:"w-100"},{default:(0,s.k6)((()=>[(0,s.bF)(z,null,{prepend:(0,s.k6)((()=>[(0,s.bF)(I,{color:e.active?"success":"grey",class:"mr-3",size:"42"},{default:(0,s.k6)((()=>[(0,s.bF)(D,{color:"white"},{default:(0,s.k6)((()=>[(0,s.eW)((0,r.v_)(e.active?"mdi-database-check":"mdi-database-off"),1)])),_:2},1024)])),_:2},1032,["color"])])),default:(0,s.k6)((()=>[(0,s.bF)(F,{class:"text-h6 pb-0"},{default:(0,s.k6)((()=>[(0,s.eW)((0,r.v_)(e.name),1)])),_:2},1024),(0,s.bF)(H,{class:"pt-1"},{default:(0,s.k6)((()=>[(0,s.bF)(y,{color:e.active?"success":"error",size:"x-small",variant:"tonal",class:"mt-1"},{default:(0,s.k6)((()=>[(0,s.eW)((0,r.v_)(e.active?"Active":"Inactive"),1)])),_:2},1032,["color"]),e.health?((0,s.uX)(),(0,s.Wv)(y,{key:0,color:"working"===e.health.status?"success":"error",size:"x-small",variant:"tonal",class:"mt-1 ml-1"},{default:(0,s.k6)((()=>[(0,s.eW)((0,r.v_)("working"===e.health.status?"Healthy":"Unhealthy"),1)])),_:2},1032,["color"])):(0,s.Q3)("",!0)])),_:2},1024)])),_:2},1024),(0,s.bF)(S,{class:"mx-4"}),(0,s.bF)(A,{class:"pt-4"},{default:(0,s.k6)((()=>[(0,s.Lk)("div",o,[(0,s.bF)(D,{size:"small",color:"grey",class:"mr-2"},{default:(0,s.k6)((()=>a[13]||(a[13]=[(0,s.eW)("mdi-link")]))),_:1}),(0,s.Lk)("span",c,(0,r.v_)(e.url),1)]),(0,s.Lk)("div",n,[(0,s.bF)(D,{size:"small",color:"grey",class:"mr-2"},{default:(0,s.k6)((()=>a[14]||(a[14]=[(0,s.eW)("mdi-calendar-clock")]))),_:1}),(0,s.Lk)("span",d," Last Scrape: "+(0,r.v_)(f.formatDate(e.lastScrape)||"Never"),1)]),(0,s.Lk)("div",u,[(0,s.bF)(D,{size:"small",color:"grey",class:"mr-2"},{default:(0,s.k6)((()=>a[15]||(a[15]=[(0,s.eW)("mdi-file-document-multiple")]))),_:1}),(0,s.Lk)("span",h," Proposals: "+(0,r.v_)(e.proposalCount||0),1)]),e.health&&e.health.message?((0,s.uX)(),(0,s.CE)("div",b,[(0,s.bF)(D,{size:"small",color:"grey",class:"mr-2"},{default:(0,s.k6)((()=>a[16]||(a[16]=[(0,s.eW)("mdi-information")]))),_:1}),(0,s.Lk)("span",m,(0,r.v_)(e.health.message),1)])):(0,s.Q3)("",!0)])),_:2},1024),(0,s.bF)($,{class:"px-4 pb-4"},{default:(0,s.k6)((()=>[(0,s.bF)(C,{color:"primary",variant:"tonal","prepend-icon":"mdi-refresh",onClick:a=>f.triggerScrape(e.id),loading:e.scraping,disabled:!e.active,size:"small"},{default:(0,s.k6)((()=>a[17]||(a[17]=[(0,s.eW)(" Scrape Now ")]))),_:2},1032,["onClick","loading","disabled"]),(0,s.bF)(C,{color:"warning",variant:"tonal","prepend-icon":"mdi-heart-pulse",onClick:a=>f.checkSourceHealth(e.id),loading:e.checkingHealth,size:"small",class:"ml-2"},{default:(0,s.k6)((()=>a[18]||(a[18]=[(0,s.eW)(" Check Health ")]))),_:2},1032,["onClick","loading"]),(0,s.bF)(w),(0,s.bF)(C,{color:e.active?"error":"success",variant:"tonal","prepend-icon":e.active?"mdi-close":"mdi-check",onClick:a=>f.toggleSourceStatus(e.id,!e.active),size:"small"},{default:(0,s.k6)((()=>[(0,s.eW)((0,r.v_)(e.active?"Deactivate":"Activate"),1)])),_:2},1032,["color","prepend-icon","onClick"])])),_:2},1024)])),_:2},1024)])),_:2},1024)))),128))])),_:1})])):(0,s.Q3)("",!0),(0,s.bF)(E,{modelValue:g.confirmDialog.show,"onUpdate:modelValue":a[2]||(a[2]=e=>g.confirmDialog.show=e),"max-width":"500"},{default:(0,s.k6)((()=>[(0,s.bF)(L,null,{default:(0,s.k6)((()=>[(0,s.bF)(F,{class:"text-h5"},{default:(0,s.k6)((()=>[(0,s.eW)((0,r.v_)(g.confirmDialog.title),1)])),_:1}),(0,s.bF)(A,null,{default:(0,s.k6)((()=>[(0,s.Lk)("p",{innerHTML:g.confirmDialog.message},null,8,k),g.confirmDialog.requireInput?((0,s.uX)(),(0,s.Wv)(T,{key:0,modelValue:g.confirmDialog.input,"onUpdate:modelValue":a[0]||(a[0]=e=>g.confirmDialog.input=e),label:g.confirmDialog.inputLabel,variant:"outlined",class:"mt-4"},null,8,["modelValue","label"])):(0,s.Q3)("",!0)])),_:1}),(0,s.bF)($,null,{default:(0,s.k6)((()=>[(0,s.bF)(w),(0,s.bF)(C,{color:"grey-darken-1",variant:"text",onClick:a[1]||(a[1]=e=>g.confirmDialog.show=!1)},{default:(0,s.k6)((()=>a[19]||(a[19]=[(0,s.eW)("Cancel")]))),_:1}),(0,s.bF)(C,{color:"error",variant:"tonal",onClick:f.confirmAction},{default:(0,s.k6)((()=>a[20]||(a[20]=[(0,s.eW)("Confirm")]))),_:1},8,["onClick"])])),_:1})])),_:1})])),_:1},8,["modelValue"]),(0,s.bF)(N,{modelValue:g.snackbar.show,"onUpdate:modelValue":a[4]||(a[4]=e=>g.snackbar.show=e),color:g.snackbar.color,timeout:g.snackbar.timeout},{actions:(0,s.k6)((()=>[(0,s.bF)(C,{variant:"text",onClick:a[3]||(a[3]=e=>g.snackbar.show=!1)},{default:(0,s.k6)((()=>a[21]||(a[21]=[(0,s.eW)("Close")]))),_:1})])),default:(0,s.k6)((()=>[(0,s.eW)((0,r.v_)(g.snackbar.text)+" ",1)])),_:1},8,["modelValue","color","timeout"])])}var g=t(782),f=t(4373);const v="http://localhost:5001/api",w={name:"DataSources",data(){return{scrapingSourceIds:[],checkingHealthSourceIds:[],sourceHealthData:{},confirmDialog:{show:!1,title:"",message:"",requireInput:!1,inputLabel:"",input:"",action:null},snackbar:{show:!1,text:"",color:"success",timeout:5e3}}},computed:{...(0,g.L8)(["isLoading","hasError","errorMessage","dataSources","lastUpdated"]),sourcesWithStatus(){return this.dataSources?this.dataSources.map((e=>({...e,scraping:this.scrapingSourceIds.includes(e.id),checkingHealth:this.checkingHealthSourceIds.includes(e.id),health:this.sourceHealthData[e.id]||null}))):[]}},methods:{formatDate(e){if(!e)return"N/A";const a=new Date(e);return a.toLocaleString()},async triggerScrape(e){this.scrapingSourceIds.push(e);try{await f.A.post(`${v}/data-sources/${e}/scrape`),this.showSnackbar("Scrape initiated successfully"),this.$store.dispatch("fetchDataSources")}catch(a){console.error("Error triggering scrape:",a),this.showSnackbar("Failed to trigger scrape: "+a.message,"error")}finally{this.scrapingSourceIds=this.scrapingSourceIds.filter((a=>a!==e))}},async toggleSourceStatus(e,a){try{await f.A.put(`${v}/data-sources/${e}`,{active:a}),this.showSnackbar(`Source ${a?"activated":"deactivated"} successfully`),this.$store.dispatch("fetchDataSources")}catch(t){console.error("Error updating source status:",t),this.showSnackbar("Failed to update source status: "+t.message,"error")}},async checkSourceHealth(e){this.checkingHealthSourceIds.push(e);try{const a=await f.A.post(`${v}/scraper-status/${e}/check`);this.sourceHealthData={...this.sourceHealthData,[e]:a.data};const t="working"===a.data.status?"healthy":"unhealthy";this.showSnackbar(`Source is ${t}`)}catch(a){console.error("Error checking source health:",a),this.showSnackbar("Failed to check source health: "+a.message,"error")}finally{this.checkingHealthSourceIds=this.checkingHealthSourceIds.filter((a=>a!==e))}},showConfirmDialog(e,a,t,s=!1,r=""){this.confirmDialog={show:!0,title:e,message:a,requireInput:s,inputLabel:r,input:"",action:t}},confirmAction(){this.confirmDialog.requireInput&&this.confirmDialog.input!==this.confirmDialog.inputLabel?this.showSnackbar("Please type the confirmation text exactly as shown","error"):(this.confirmDialog.show=!1,"function"===typeof this.confirmDialog.action&&this.confirmDialog.action())},showSnackbar(e,a="success",t=5e3){this.snackbar={show:!0,text:e,color:a,timeout:t}},rebuildDatabase(){this.showConfirmDialog("Rebuild Database","WARNING: This will rebuild the database from scratch.<br><br>This operation will:<br>1. Create a backup of the current database<br>2. Rebuild the database structure<br>3. Preserve your data<br><br>The application may need to be restarted after this operation.",this.performDatabaseRebuild)},async performDatabaseRebuild(){try{await f.A.post(`${v}/rebuild-db`),this.showSnackbar("Database rebuild started. The application may need to be restarted.")}catch(e){console.error("Error rebuilding database:",e),this.showSnackbar("Failed to rebuild database: "+e.message,"error")}},initializeDatabase(){this.showConfirmDialog("Initialize Database","WARNING: This will delete the current database and create a new one!<br><br>This operation will:<br>1. Delete ALL existing data<br>2. Create a new empty database<br>3. Initialize the data sources<br><br>This operation cannot be undone. All your data will be permanently lost.",this.performDatabaseInitialization,!0,"INIT")},async performDatabaseInitialization(){try{await f.A.post(`${v}/init-db`),this.showSnackbar("Database initialization started. The page will reload shortly."),setTimeout((()=>window.location.reload()),5e3)}catch(e){console.error("Error initializing database:",e),this.showSnackbar("Failed to initialize database: "+e.message,"error")}},deleteAllFiles(){this.showConfirmDialog("Delete All Files","WARNING: This is a destructive operation!<br><br>This will:<br>1. Delete ALL downloaded files<br>2. Delete ALL database backups<br>3. Delete the current database<br>4. Create a new empty database<br><br>This operation cannot be undone. All your data will be permanently lost.",this.performDeleteAllFiles,!0,"RESET")},async performDeleteAllFiles(){try{await f.A.post(`${v}/reset-everything`),this.showSnackbar("Reset initiated. The application will be reloaded shortly."),setTimeout((()=>window.location.reload()),5e3)}catch(e){console.error("Error resetting everything:",e),this.showSnackbar("Failed to reset: "+e.message,"error")}},async runHealthChecks(){try{this.showSnackbar("Running health checks for all sources...","info");const e=await f.A.get(`${v}/data-sources`),a=e.data;if(!a||0===a.length)return void this.showSnackbar("No data sources found","warning");const t=a.map((e=>f.A.post(`${v}/scraper-status/${e.id}/check`).then((a=>{const t=a.data;return this.sourceHealthData={...this.sourceHealthData,[e.id]:t},t})))),s=await Promise.all(t),r=s.filter((e=>e.success&&"working"===e.status)).length,l=s.filter((e=>e.success&&"not_working"===e.status)).length,i=s.filter((e=>!e.success)).length;this.showSnackbar(`Health checks completed: ${r} working, ${l} not working, ${i} errors.`)}catch(e){console.error("Error running health checks:",e),this.showSnackbar("Failed to run health checks: "+e.message,"error")}}},mounted(){this.$store.dispatch("fetchDataSources")}};var y=t(1241);const _=(0,y.A)(w,[["render",p],["__scopeId","data-v-9065494a"]]),D=_}}]);
//# sourceMappingURL=301.671ef45afcfd1e86.js.map