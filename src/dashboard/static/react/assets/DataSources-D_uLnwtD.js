import{u as n,c as O,d as _,e as z,r as c,j as t,A as B,a as G,b as H,B as v,D as X,g as q,h as J,i as Q,k as V,l as W,f as Y,S as Z}from"./index-CdMYTWmt.js";import{P as w,D as ee}from"./DataTable-D98HHWDw.js";const se=s=>s.dataSources,te=s=>s.loading.dataSources,ae=s=>s.errors.dataSources,re=s=>s.fetchDataSources,oe=s=>s.createDataSource,ce=s=>s.updateDataSource,ne=s=>s.pullDataSource,le=s=>s.getScraperStatus,ie=s=>s.pullingProgress,ue=s=>s.setPullingProgress;function he(){const s=n(se),y=n(te),j=n(ae),l=n(re),I=n(oe),b=n(ce),N=n(ne),C=n(le),E=n(ie),h=n(ue),{toast:i}=O(),{addToast:k}=_(),{addToast:f}=z(),[A,m]=c.useState(!1),[d,P]=c.useState(null),[S,D]=c.useState(!0);c.useEffect(()=>(console.log("DataSources component mounted, fetching data sources..."),l().then(()=>{console.log("Data sources fetched successfully in component"),D(!1)}).catch(e=>{console.error("Error fetching data sources in component:",e),D(!1)}),()=>{console.log("DataSources component unmounting")}),[l]),c.useEffect(()=>{if(!s.length)return;const e=s.filter(r=>E[r.id]);if(e.length===0)return;console.log("Found running data sources:",e);const o=[],x={},g=3*60*1e3;return e.forEach(r=>{x[r.id]=Date.now();const u=setInterval(async()=>{try{const a=Date.now()-x[r.id];if(a>g){clearInterval(u);const T=`Scraper timed out after ${Math.floor(a/6e4)} minutes. The operation may still be running in the background.`;i({title:"Scraper Timeout",description:T,variant:"destructive",duration:15e3}),await l(),h(r.id,!1);return}const p=await C(String(r.id));if(console.log(`Status check for source ID ${r.id}:`,p),p.status!=="running"){if(clearInterval(u),p.status==="success"){const T=`Successfully pulled data from ${r.name}`;i({title:"Success!",description:T,variant:"success",duration:1e4})}else i({title:"Error pulling data",description:p.message,variant:"destructive",duration:15e3});await l(),h(r.id,!1)}}catch(a){console.error("Error checking scraper status:",a)}},1e3);o.push(u)}),()=>{o.forEach(r=>clearInterval(r))}},[s,E,C,l,i,h]),c.useEffect(()=>{console.log("DataSources component state:",{dataSources:s,loading:y,errors:j,isInitialLoad:S})},[s,y,j,S]);const M=c.useCallback(()=>{console.log("Manually refreshing data sources..."),D(!0),l().then(()=>{console.log("Data sources refreshed successfully"),D(!1)}).catch(e=>{console.error("Error refreshing data sources:",e),D(!1)})},[l]),R=c.useCallback(async e=>{try{await I(e),m(!1)}catch(o){console.error("Failed to create data source:",o)}},[I]),$=c.useCallback(async e=>{try{await b(String(e.id),e),m(!1),P(null)}catch(o){console.error("Failed to update data source:",o)}},[b]),L=c.useCallback(e=>{P(e),m(!0)},[]),F=c.useCallback(async e=>{var o,x;try{h(e.id,!0);const g=`Starting to pull data from ${e.name}. This may take a while...`;k({title:"Pulling data",description:g,variant:"default",duration:0}),f({title:"Pulling data",message:g,type:"info"}),console.log(`Starting to pull data from source ID ${e.id}: ${e.name}`);const r=await N(String(e.id));console.log(`Pull initiated for source ID ${e.id}:`,r);let u=setInterval(async()=>{try{const a=await C(String(e.id));if(console.log(`Status check for source ID ${e.id}:`,a),k({title:`Status: ${a.status}`,description:a.message,variant:a.status==="running"?"default":a.status==="completed"?"success":"destructive",duration:a.status==="running"?0:1e4}),a.status!=="running"){if(u&&(clearInterval(u),u=null),a.status==="completed"){const p=`Successfully pulled data from ${e.name}`;i({title:"Success!",description:p,variant:"success",duration:1e4}),f({title:"Success!",message:p,type:"success"})}else a.status==="timeout"?(i({title:"Scraper Timeout",description:a.message,variant:"destructive",duration:15e3}),f({title:"Scraper Timeout",message:a.message,type:"error",duration:15e3})):(i({title:"Error pulling data",description:a.message,variant:"destructive",duration:15e3}),f({title:"Error pulling data",message:a.message,type:"error",duration:15e3}));await l(),h(e.id,!1)}}catch(a){console.error("Error checking scraper status:",a)}},1e3);return()=>{u&&clearInterval(u)}}catch(g){console.error("Failed to pull data source:",g);const r=((x=(o=g.response)==null?void 0:o.data)==null?void 0:x.message)||g.message||"An unknown error occurred";i({title:"Error pulling data",description:r,variant:"destructive",duration:15e3}),f({title:"Error pulling data",message:r,type:"error",duration:15e3}),h(e.id,!1)}},[N,C,l,i,k,f,h]),K=c.useCallback(()=>{m(!1),P(null)},[]);if((S||y)&&!s.length)return t.jsx(w,{title:"Data Sources",isLoading:!0,children:t.jsx("div",{children:"Loading data sources..."})});if(j&&!S&&!s.length)return t.jsxs("div",{className:"space-y-6",children:[t.jsx("h1",{className:"text-3xl font-bold tracking-tight",children:"Data Sources"}),t.jsxs(B,{variant:"destructive",children:[t.jsx(G,{children:"Error loading data sources"}),t.jsx(H,{children:j.message})]}),t.jsx(v,{onClick:M,children:"Retry"})]});const U=[{header:"Name",accessorKey:"name"},{header:"URL",accessorKey:"url"},{header:"Status",accessorKey:"status"},{header:"Last Checked",accessorKey:e=>e.lastChecked?Y(e.lastChecked):"Never"},{header:"Proposals",accessorKey:e=>{var o;return((o=e.proposalCount)==null?void 0:o.toString())||"0"}},{header:"Actions",accessorKey:"id",cell:e=>t.jsxs("div",{className:"flex space-x-2",children:[t.jsx(v,{variant:"outline",size:"sm",onClick:()=>F(e),disabled:E[e.id],children:E[e.id]?t.jsxs("span",{className:"flex items-center",children:[t.jsx(Z,{className:"mr-2 h-4 w-4"}),"Pulling..."]}):"Pull Source"}),t.jsx(v,{variant:"outline",size:"sm",onClick:()=>L(e),children:"Edit"})]})}];return t.jsx(w,{title:"Data Sources",children:t.jsxs("div",{className:"space-y-4",children:[t.jsxs("div",{className:"flex justify-between items-center",children:[t.jsxs("p",{className:"text-muted-foreground",children:[s.length," data sources configured"]}),t.jsxs("div",{className:"flex gap-2",children:[t.jsx(v,{onClick:M,children:"Refresh"}),t.jsxs(X,{open:A,onOpenChange:m,children:[t.jsx(q,{asChild:!0,children:t.jsx(v,{children:"Add Data Source"})}),t.jsxs(J,{children:[t.jsx(Q,{children:t.jsx(V,{children:d?"Edit Data Source":"Add Data Source"})}),t.jsx(W,{initialData:d?{id:d.id,name:d.name,url:d.url,description:d.description}:void 0,onSubmit:e=>{d?$({...e,id:d.id}):R(e)},onCancel:K})]})]})]})]}),t.jsx(ee,{data:s,columns:U,emptyMessage:"No data sources configured",isLoading:y||S})]})})}export{he as default};
