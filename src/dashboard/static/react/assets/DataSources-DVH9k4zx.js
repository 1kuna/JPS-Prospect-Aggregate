import{u as g,c as G,r as o,j as s,S as T,A as H,a as Y,b as J,B as m,D as Q,d as V,e as W,g as X,h as Z,i as ee,f as te}from"./index-BFCR39p-.js";import{P as L,D as se}from"./DataTable-jZeNWUkw.js";const ae=t=>t.dataSources,oe=t=>t.loading.dataSources,re=t=>t.errors.dataSources,ce=t=>t.fetchDataSources,ne=t=>t.createDataSource,le=t=>t.updateDataSource,ie=t=>t.pullDataSource,ue=t=>t.getScraperStatus,h={},r={},K=o.memo(({dataSource:t,onPull:S})=>{const[l,i]=o.useState(!!h[t.id]);o.useEffect(()=>{const x=()=>{const p=!!h[t.id];p!==l&&i(p)};x();const k=setInterval(x,500);return()=>clearInterval(k)},[t.id,l]);const v=o.useCallback(()=>{i(!0),S(t)},[t,S]);return s.jsx(m,{variant:"outline",size:"sm",onClick:v,disabled:l,className:"min-w-[100px] transition-all duration-300 ease-in-out",children:l?s.jsxs("span",{className:"flex items-center justify-center w-full",children:[s.jsx(T,{className:"mr-2 h-4 w-4"}),"Pulling..."]}):"Pull Source"})});K.displayName="PullButton";const R=o.memo(({row:t,onPull:S,onEdit:l})=>s.jsxs("div",{className:"flex space-x-2",children:[s.jsx(K,{dataSource:t,onPull:S}),s.jsx(m,{variant:"outline",size:"sm",onClick:()=>l(t),children:"Edit"})]}));R.displayName="ActionCell";function he(){const t=g(ae),S=g(oe),l=g(re),i=g(ce),v=g(ne),x=g(le),k=g(ie),p=g(ue),{toast:d}=G(),[O,D]=o.useState(!1),[f,$]=o.useState(null),[j,C]=o.useState(!0);o.useEffect(()=>{j&&i().then(()=>C(!1)).catch(()=>C(!1))},[i,j]);const b=o.useCallback(a=>{const e=a.id;r[e]&&clearInterval(r[e]);let c=0,E="",y="";console.log(`[DataSources] Setting up polling for source ${e}`),r[e]=setInterval(async()=>{var N,P,w;try{c++,console.log(`[DataSources] Checking status for source ${e} (check #${c})`);const u=await p(String(e));console.log(`[DataSources] Status response for source ${e}:`,u);const n=((N=u.data)==null?void 0:N.status)||u.status,A=((P=u.data)==null?void 0:P.message)||u.message||"";if((w=u.data)!=null&&w.subtask_id&&!y&&(y=u.data.subtask_id,console.log(`[DataSources] Found subtask ID: ${y} for source ${e}`)),console.log(`[DataSources] Actual status for source ${e}: ${n}, message: ${A}`),n===E&&c>1){console.log(`[DataSources] Status hasn't changed for source ${e}, continuing to poll`);return}if(E=n,n!=="running"&&n!=="pending"){console.log(`[DataSources] Source ${e} is no longer running (${n}), updating state`),clearInterval(r[e]),delete r[e],h[e]=!1;const q=a.name||`Source #${e}`;n==="completed"||n==="success"||n==="working"?(console.log(`[DataSources] Source ${e} completed successfully, showing toast`),d({title:"Success!",description:`Successfully pulled data from ${q}`,variant:"success",duration:1e4}),i().catch(()=>{})):(console.log(`[DataSources] Source ${e} failed (${n}), showing error toast`),d({title:"Error pulling data",description:A||"An unknown error occurred",variant:"destructive",duration:15e3}))}else c>=150&&(console.log(`[DataSources] Source ${e} polling timeout after ${c} checks`),clearInterval(r[e]),delete r[e],h[e]=!1,d({title:"Operation taking too long",description:`The operation for ${a.name} is still running in the background, but we've stopped checking its status. You can check the status later by refreshing the page.`,variant:"default",duration:15e3}))}catch(u){console.error(`[DataSources] Error checking status for source ${e}:`,u),c>10&&(console.log(`[DataSources] Too many errors checking status for source ${e}, stopping polling`),clearInterval(r[e]),delete r[e],h[e]=!1,d({title:"Error checking status",description:`Failed to check status for ${a.name||`Source #${e}`}`,variant:"destructive",duration:1e4}))}},2e3)},[p,d,i]),B=o.useCallback(async a=>{const e=a.id;if(h[e]){console.log(`[DataSources] Source ${e} is already being pulled, ignoring request`);return}console.log(`[DataSources] Starting pull for source ${e}`),h[e]=!0,console.log(`[DataSources] Showing toast for source ${e}`),d({title:"Pulling data",description:`Starting to pull data from ${a.name}. This may take a while...`,variant:"default",duration:3e4});try{console.log(`[DataSources] Calling pullDataSource API for source ${e}`);const c=await k(String(e));console.log(`[DataSources] API call successful for source ${e}:`,c),b(a)}catch(c){console.error(`[DataSources] Error pulling source ${e}:`,c),d({title:"Error pulling data",description:`An unexpected error occurred: ${c.message}`,variant:"destructive",duration:15e3}),h[e]=!1}},[k,d,b]);o.useEffect(()=>()=>{console.log("[DataSources] Cleaning up all intervals"),Object.keys(r).forEach(a=>{clearInterval(r[Number(a)]),delete r[Number(a)]})},[]);const I=o.useCallback(()=>{i().catch(()=>{})},[i]),F=async a=>{try{await v(a),D(!1)}catch{}},U=async a=>{try{await x(String(a.id),a),D(!1),$(null)}catch{}},_=o.useCallback(a=>{$(a),D(!0)},[]),z=o.useCallback(()=>{D(!1),$(null)},[]);if((j||S)&&!t.length)return s.jsx(L,{title:"Data Sources",isLoading:!0,children:s.jsx("div",{className:"flex justify-center items-center h-[500px]",children:s.jsx(T,{})})});if(l&&!j&&!t.length)return s.jsxs("div",{className:"space-y-6",children:[s.jsxs(H,{variant:"destructive",children:[s.jsx(Y,{children:"Error loading data sources"}),s.jsx(J,{children:l.message})]}),s.jsx(m,{onClick:I,children:"Retry"})]});const M=[{header:"Name",accessorKey:"name"},{header:"URL",accessorKey:"url"},{header:"Status",accessorKey:"status"},{header:"Last Checked",accessorKey:a=>{const e=a.lastChecked||a.last_checked;return e?te(e):"Never"}},{header:"Proposals",accessorKey:a=>{var e;return((e=a.proposalCount)==null?void 0:e.toString())||"0"}},{header:"Actions",accessorKey:"id",cell:a=>s.jsx(R,{row:a,onPull:B,onEdit:_})}];return s.jsx(L,{title:"Data Sources",children:s.jsxs("div",{className:"space-y-4 min-h-[500px] bg-background transition-all duration-300",children:[s.jsxs("div",{className:"flex justify-between items-center",children:[s.jsxs("p",{className:"text-muted-foreground",children:[t.length," data sources configured"]}),s.jsxs("div",{className:"flex gap-2",children:[s.jsx(m,{onClick:I,children:"Refresh"}),s.jsxs(Q,{open:O,onOpenChange:D,children:[s.jsx(V,{asChild:!0,children:s.jsx(m,{children:"Add Data Source"})}),s.jsxs(W,{children:[s.jsx(X,{children:s.jsx(Z,{children:f?"Edit Data Source":"Add Data Source"})}),s.jsx(ee,{initialData:f?{id:f.id,name:f.name,url:f.url,description:f.description}:void 0,onSubmit:a=>{f?U(a):F(a)},onCancel:z})]})]})]})]}),s.jsx(se,{data:t,columns:M,emptyMessage:"No data sources configured",isLoading:S},"data-sources-table")]})})}export{he as default};
