import{u as h,c as q,r as o,j as s,A as G,a as H,b as Y,B as k,D as J,d as Q,e as V,g as W,h as X,i as Z,f as ee,S as te}from"./index-BU0x6HtB.js";import{P as L,D as se}from"./DataTable-D9j2DpIt.js";const ae=t=>t.dataSources,oe=t=>t.loading.dataSources,re=t=>t.errors.dataSources,ce=t=>t.fetchDataSources,le=t=>t.createDataSource,ne=t=>t.updateDataSource,ie=t=>t.pullDataSource,ue=t=>t.getScraperStatus,S={},r={},T=o.memo(({dataSource:t,onPull:f})=>{const[n,i]=o.useState(!!S[t.id]);o.useEffect(()=>{const p=()=>{const D=!!S[t.id];D!==n&&i(D)};p();const v=setInterval(p,500);return()=>clearInterval(v)},[t.id,n]);const j=o.useCallback(()=>{i(!0),f(t)},[t,f]);return s.jsx(k,{variant:"outline",size:"sm",onClick:j,disabled:n,className:"min-w-[100px] transition-all duration-300 ease-in-out",children:n?s.jsxs("span",{className:"flex items-center justify-center w-full",children:[s.jsx(te,{className:"mr-2 h-4 w-4"}),"Pulling..."]}):"Pull Source"})});T.displayName="PullButton";const F=o.memo(({row:t,onPull:f,onEdit:n})=>s.jsxs("div",{className:"flex space-x-2",children:[s.jsx(T,{dataSource:t,onPull:f}),s.jsx(k,{variant:"outline",size:"sm",onClick:()=>n(t),children:"Edit"})]}));F.displayName="ActionCell";function he(){const t=h(ae),f=h(oe),n=h(re),i=h(ce),j=h(le),p=h(ne),v=h(ie),D=h(ue),{toast:d}=q(),[K,m]=o.useState(!1),[g,$]=o.useState(null),[x,y]=o.useState(!0);o.useEffect(()=>{x&&i().then(()=>y(!1)).catch(()=>y(!1))},[i,x]);const b=o.useCallback(a=>{const e=a.id;r[e]&&clearInterval(r[e]);let c=0,E="",C="";console.log(`[DataSources] Setting up polling for source ${e}`),r[e]=setInterval(async()=>{var N,P,w;try{c++,console.log(`[DataSources] Checking status for source ${e} (check #${c})`);const u=await D(String(e));console.log(`[DataSources] Status response for source ${e}:`,u);const l=((N=u.data)==null?void 0:N.status)||u.status,A=((P=u.data)==null?void 0:P.message)||u.message||"";if((w=u.data)!=null&&w.subtask_id&&!C&&(C=u.data.subtask_id,console.log(`[DataSources] Found subtask ID: ${C} for source ${e}`)),console.log(`[DataSources] Actual status for source ${e}: ${l}, message: ${A}`),l===E&&c>1){console.log(`[DataSources] Status hasn't changed for source ${e}, continuing to poll`);return}if(E=l,l!=="running"&&l!=="pending"){console.log(`[DataSources] Source ${e} is no longer running (${l}), updating state`),clearInterval(r[e]),delete r[e],S[e]=!1;const _=a.name||`Source #${e}`;l==="completed"||l==="success"||l==="working"?(console.log(`[DataSources] Source ${e} completed successfully, showing toast`),d({title:"Success!",description:`Successfully pulled data from ${_}`,variant:"success",duration:1e4}),i().catch(()=>{})):(console.log(`[DataSources] Source ${e} failed (${l}), showing error toast`),d({title:"Error pulling data",description:A||"An unknown error occurred",variant:"destructive",duration:15e3}))}else c>=150&&(console.log(`[DataSources] Source ${e} polling timeout after ${c} checks`),clearInterval(r[e]),delete r[e],S[e]=!1,d({title:"Operation taking too long",description:`The operation for ${a.name} is still running in the background, but we've stopped checking its status. You can check the status later by refreshing the page.`,variant:"default",duration:15e3}))}catch(u){console.error(`[DataSources] Error checking status for source ${e}:`,u),c>10&&(console.log(`[DataSources] Too many errors checking status for source ${e}, stopping polling`),clearInterval(r[e]),delete r[e],S[e]=!1,d({title:"Error checking status",description:`Failed to check status for ${a.name||`Source #${e}`}`,variant:"destructive",duration:1e4}))}},2e3)},[D,d,i]),R=o.useCallback(async a=>{const e=a.id;if(S[e]){console.log(`[DataSources] Source ${e} is already being pulled, ignoring request`);return}console.log(`[DataSources] Starting pull for source ${e}`),S[e]=!0,console.log(`[DataSources] Showing toast for source ${e}`),d({title:"Pulling data",description:`Starting to pull data from ${a.name}. This may take a while...`,variant:"default",duration:3e4});try{console.log(`[DataSources] Calling pullDataSource API for source ${e}`);const c=await v(String(e));console.log(`[DataSources] API call successful for source ${e}:`,c),b(a)}catch(c){console.error(`[DataSources] Error pulling source ${e}:`,c),d({title:"Error pulling data",description:`An unexpected error occurred: ${c.message}`,variant:"destructive",duration:15e3}),S[e]=!1}},[v,d,b]);o.useEffect(()=>()=>{console.log("[DataSources] Cleaning up all intervals"),Object.keys(r).forEach(a=>{clearInterval(r[Number(a)]),delete r[Number(a)]})},[]);const I=o.useCallback(()=>{i().catch(()=>{})},[i]),O=o.useCallback(async a=>{try{await j(a),m(!1)}catch(e){console.error("Failed to create data source:",e)}},[j]),B=o.useCallback(async a=>{try{await p(String(a.id),a),m(!1),$(null)}catch(e){console.error("Failed to update data source:",e)}},[p]),U=o.useCallback(a=>{$(a),m(!0)},[]),z=o.useCallback(()=>{m(!1),$(null)},[]);if((x||f)&&!t.length)return s.jsx(L,{title:"Data Sources",isLoading:!0,children:s.jsx("div",{children:"Loading data sources..."})});if(n&&!x&&!t.length)return s.jsxs("div",{className:"space-y-6",children:[s.jsx("h1",{className:"text-3xl font-bold tracking-tight",children:"Data Sources"}),s.jsxs(G,{variant:"destructive",children:[s.jsx(H,{children:"Error loading data sources"}),s.jsx(Y,{children:n.message})]}),s.jsx(k,{onClick:I,children:"Retry"})]});const M=[{header:"Name",accessorKey:"name"},{header:"URL",accessorKey:"url"},{header:"Status",accessorKey:"status"},{header:"Last Checked",accessorKey:a=>a.lastChecked?ee(a.lastChecked):"Never"},{header:"Proposals",accessorKey:a=>{var e;return((e=a.proposalCount)==null?void 0:e.toString())||"0"}},{header:"Actions",accessorKey:"id",cell:a=>s.jsx(F,{row:a,onPull:R,onEdit:U})}];return s.jsx(L,{title:"Data Sources",children:s.jsxs("div",{className:"space-y-4 min-h-[500px] bg-background transition-all duration-300",children:[s.jsxs("div",{className:"flex justify-between items-center",children:[s.jsxs("p",{className:"text-muted-foreground",children:[t.length," data sources configured"]}),s.jsxs("div",{className:"flex gap-2",children:[s.jsx(k,{onClick:I,children:"Refresh"}),s.jsxs(J,{open:K,onOpenChange:m,children:[s.jsx(Q,{asChild:!0,children:s.jsx(k,{children:"Add Data Source"})}),s.jsxs(V,{children:[s.jsx(W,{children:s.jsx(X,{children:g?"Edit Data Source":"Add Data Source"})}),s.jsx(Z,{initialData:g?{id:g.id,name:g.name,url:g.url,description:g.description}:void 0,onSubmit:a=>{g?B({...a,id:g.id}):O(a)},onCancel:z})]})]})]})]}),s.jsx(se,{data:t,columns:M,emptyMessage:"No data sources configured",isLoading:f||x},"data-sources-table")]})})}export{he as default};
