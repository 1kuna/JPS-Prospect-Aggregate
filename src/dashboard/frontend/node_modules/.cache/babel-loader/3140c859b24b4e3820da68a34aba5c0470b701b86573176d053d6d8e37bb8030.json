{"ast":null,"code":"import axios from 'axios';\n\n// Get the API base URL from environment or use default\nconst apiBaseUrl = process.env.VUE_APP_API_URL || 'http://localhost:5001/api';\nexport default {\n  name: 'App',\n  data() {\n    return {\n      drawer: false,\n      menuItems: [{\n        title: 'Dashboard',\n        path: '/',\n        icon: 'mdi-view-dashboard'\n      }, {\n        title: 'Data Sources',\n        path: '/data-sources',\n        icon: 'mdi-database'\n      }],\n      advancedItems: [{\n        title: 'Rebuild Database',\n        action: 'rebuildDatabase',\n        icon: 'mdi-database-refresh'\n      }, {\n        title: 'Initialize Database',\n        action: 'initializeDatabase',\n        icon: 'mdi-database-plus'\n      }, {\n        title: 'Delete All Files',\n        action: 'deleteAllFiles',\n        icon: 'mdi-delete'\n      }, {\n        title: 'Run Health Checks',\n        action: 'runHealthChecks',\n        icon: 'mdi-heart-pulse'\n      }],\n      confirmDialog: {\n        show: false,\n        title: '',\n        message: '',\n        requireInput: false,\n        inputLabel: '',\n        input: '',\n        action: null\n      },\n      snackbar: {\n        show: false,\n        text: '',\n        color: 'success',\n        timeout: 5000\n      }\n    };\n  },\n  methods: {\n    refreshData() {\n      // Emit an event to refresh data\n      this.$store.dispatch('refreshData');\n      this.showSnackbar('Refreshing data...');\n    },\n    handleAdvancedAction(action) {\n      // Close the drawer\n      this.drawer = false;\n\n      // Get the current view component\n      const currentView = this.$refs.currentView;\n\n      // Check if the current view has the requested method\n      if (currentView && typeof currentView[action] === 'function') {\n        // Call the method on the current view\n        currentView[action]();\n      } else {\n        // If the method doesn't exist on the current view, show an error\n        this.showSnackbar('This feature is not available on the current page. Please navigate to Dashboard or Data Sources.', 'warning');\n      }\n    },\n    showConfirmDialog(title, message, action, requireInput = false, inputLabel = '') {\n      this.confirmDialog = {\n        show: true,\n        title,\n        message,\n        requireInput,\n        inputLabel,\n        input: '',\n        action\n      };\n    },\n    confirmAction() {\n      if (this.confirmDialog.requireInput && this.confirmDialog.input !== this.confirmDialog.inputLabel) {\n        this.showSnackbar('Please type the confirmation text exactly as shown', 'error');\n        return;\n      }\n      this.confirmDialog.show = false;\n      if (typeof this.confirmDialog.action === 'function') {\n        this.confirmDialog.action();\n      }\n    },\n    showSnackbar(text, color = 'success', timeout = 5000) {\n      this.snackbar = {\n        show: true,\n        text,\n        color,\n        timeout\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","apiBaseUrl","process","env","VUE_APP_API_URL","name","data","drawer","menuItems","title","path","icon","advancedItems","action","confirmDialog","show","message","requireInput","inputLabel","input","snackbar","text","color","timeout","methods","refreshData","$store","dispatch","showSnackbar","handleAdvancedAction","currentView","$refs","showConfirmDialog","confirmAction"],"sources":["/Users/zach/Documents/Git/JPS-Prospect-Aggregate/src/dashboard/frontend/src/App.vue"],"sourcesContent":["<template>\n  <v-app>\n    <!-- Modern app bar with subtle elevation and improved spacing -->\n    <v-app-bar \n      app \n      elevation=\"1\"\n      color=\"white\"\n      height=\"64\"\n    >\n      <v-app-bar-nav-icon \n        @click=\"drawer = !drawer\"\n        color=\"primary\"\n        class=\"ml-2\"\n      ></v-app-bar-nav-icon>\n      \n      <v-toolbar-title class=\"text-h5 font-weight-medium ml-2\">\n        JPS Proposal Forecast\n      </v-toolbar-title>\n      \n      <v-spacer></v-spacer>\n      \n      <v-btn\n        icon\n        @click=\"refreshData\"\n        color=\"primary\"\n        class=\"mr-2\"\n        elevation=\"0\"\n      >\n        <v-tooltip location=\"bottom\">\n          <template v-slot:activator=\"{ props }\">\n            <v-icon v-bind=\"props\">mdi-refresh</v-icon>\n          </template>\n          <span>Refresh Data</span>\n        </v-tooltip>\n      </v-btn>\n    </v-app-bar>\n\n    <!-- Improved navigation drawer with better styling -->\n    <v-navigation-drawer\n      v-model=\"drawer\"\n      app\n      color=\"grey-lighten-5\"\n      :width=\"280\"\n      elevation=\"2\"\n    >\n      <v-list class=\"py-4\">\n        <v-list-item class=\"mb-4 px-4\">\n          <div class=\"text-h6 font-weight-bold primary--text\">\n            JPS Proposal Forecast\n          </div>\n        </v-list-item>\n        \n        <v-divider class=\"mb-2\"></v-divider>\n        \n        <v-list-item\n          v-for=\"(item, i) in menuItems\"\n          :key=\"i\"\n          :to=\"item.path\"\n          :prepend-icon=\"item.icon\"\n          :title=\"item.title\"\n          rounded=\"lg\"\n          class=\"mb-1 mx-2\"\n          active-color=\"primary\"\n        ></v-list-item>\n        \n        <v-divider class=\"my-2\"></v-divider>\n        \n        <v-list-subheader class=\"text-uppercase font-weight-bold\">\n          Advanced Features\n        </v-list-subheader>\n        \n        <v-list-item\n          v-for=\"(item, i) in advancedItems\"\n          :key=\"i\"\n          @click=\"handleAdvancedAction(item.action)\"\n          :prepend-icon=\"item.icon\"\n          :title=\"item.title\"\n          rounded=\"lg\"\n          class=\"mb-1 mx-2\"\n          active-color=\"primary\"\n        ></v-list-item>\n      </v-list>\n      \n      <template v-slot:append>\n        <div class=\"pa-4\">\n          <v-btn\n            block\n            color=\"primary\"\n            variant=\"tonal\"\n            prepend-icon=\"mdi-refresh\"\n            @click=\"refreshData\"\n          >\n            Refresh Data\n          </v-btn>\n        </div>\n      </template>\n    </v-navigation-drawer>\n\n    <!-- Main content area with improved spacing -->\n    <v-main class=\"bg-grey-lighten-4\">\n      <v-container fluid class=\"pa-4\">\n        <router-view ref=\"currentView\"></router-view>\n      </v-container>\n    </v-main>\n\n    <!-- Modern footer with subtle styling -->\n    <v-footer app class=\"bg-white px-4\" elevation=\"1\" height=\"40\">\n      <span class=\"text-caption text-grey\">\n        &copy; {{ new Date().getFullYear() }} JPS Proposal Forecast Aggregator\n      </span>\n      <v-spacer></v-spacer>\n      <span class=\"text-caption text-grey\">v1.0.0</span>\n    </v-footer>\n    \n    <!-- Confirmation Dialog -->\n    <v-dialog v-model=\"confirmDialog.show\" max-width=\"500\">\n      <v-card>\n        <v-card-title class=\"text-h5\">{{ confirmDialog.title }}</v-card-title>\n        <v-card-text>\n          <p v-html=\"confirmDialog.message\"></p>\n          <v-text-field\n            v-if=\"confirmDialog.requireInput\"\n            v-model=\"confirmDialog.input\"\n            :label=\"confirmDialog.inputLabel\"\n            variant=\"outlined\"\n            class=\"mt-4\"\n          ></v-text-field>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"grey-darken-1\" variant=\"text\" @click=\"confirmDialog.show = false\">Cancel</v-btn>\n          <v-btn color=\"error\" variant=\"tonal\" @click=\"confirmAction\">Confirm</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    \n    <!-- Success/Error Snackbar -->\n    <v-snackbar v-model=\"snackbar.show\" :color=\"snackbar.color\" :timeout=\"snackbar.timeout\">\n      {{ snackbar.text }}\n      <template v-slot:actions>\n        <v-btn variant=\"text\" @click=\"snackbar.show = false\">Close</v-btn>\n      </template>\n    </v-snackbar>\n  </v-app>\n</template>\n\n<script>\nimport axios from 'axios'\n\n// Get the API base URL from environment or use default\nconst apiBaseUrl = process.env.VUE_APP_API_URL || 'http://localhost:5001/api'\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      drawer: false,\n      menuItems: [\n        { title: 'Dashboard', path: '/', icon: 'mdi-view-dashboard' },\n        { title: 'Data Sources', path: '/data-sources', icon: 'mdi-database' }\n      ],\n      advancedItems: [\n        { title: 'Rebuild Database', action: 'rebuildDatabase', icon: 'mdi-database-refresh' },\n        { title: 'Initialize Database', action: 'initializeDatabase', icon: 'mdi-database-plus' },\n        { title: 'Delete All Files', action: 'deleteAllFiles', icon: 'mdi-delete' },\n        { title: 'Run Health Checks', action: 'runHealthChecks', icon: 'mdi-heart-pulse' }\n      ],\n      confirmDialog: {\n        show: false,\n        title: '',\n        message: '',\n        requireInput: false,\n        inputLabel: '',\n        input: '',\n        action: null\n      },\n      snackbar: {\n        show: false,\n        text: '',\n        color: 'success',\n        timeout: 5000\n      }\n    }\n  },\n  methods: {\n    refreshData() {\n      // Emit an event to refresh data\n      this.$store.dispatch('refreshData')\n      this.showSnackbar('Refreshing data...')\n    },\n    handleAdvancedAction(action) {\n      // Close the drawer\n      this.drawer = false\n      \n      // Get the current view component\n      const currentView = this.$refs.currentView\n      \n      // Check if the current view has the requested method\n      if (currentView && typeof currentView[action] === 'function') {\n        // Call the method on the current view\n        currentView[action]()\n      } else {\n        // If the method doesn't exist on the current view, show an error\n        this.showSnackbar('This feature is not available on the current page. Please navigate to Dashboard or Data Sources.', 'warning')\n      }\n    },\n    showConfirmDialog(title, message, action, requireInput = false, inputLabel = '') {\n      this.confirmDialog = {\n        show: true,\n        title,\n        message,\n        requireInput,\n        inputLabel,\n        input: '',\n        action\n      }\n    },\n    confirmAction() {\n      if (this.confirmDialog.requireInput && \n          this.confirmDialog.input !== this.confirmDialog.inputLabel) {\n        this.showSnackbar('Please type the confirmation text exactly as shown', 'error')\n        return\n      }\n      \n      this.confirmDialog.show = false\n      if (typeof this.confirmDialog.action === 'function') {\n        this.confirmDialog.action()\n      }\n    },\n    showSnackbar(text, color = 'success', timeout = 5000) {\n      this.snackbar = {\n        show: true,\n        text,\n        color,\n        timeout\n      }\n    }\n  }\n}\n</script>\n\n<style>\n/* Global styles */\n:root {\n  --border-radius: 12px;\n}\n\n.v-card {\n  border-radius: var(--border-radius) !important;\n}\n\n.v-btn {\n  letter-spacing: 0.5px;\n}\n\n.v-card-title {\n  font-weight: 600 !important;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}