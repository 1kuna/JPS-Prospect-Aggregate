{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"d-flex align-center mb-4\"\n};\nconst _hoisted_2 = {\n  key: 3\n};\nconst _hoisted_3 = {\n  class: \"d-flex align-center mb-2\"\n};\nconst _hoisted_4 = {\n  class: \"text-body-2 text-medium-emphasis text-truncate\"\n};\nconst _hoisted_5 = {\n  class: \"d-flex align-center mb-2\"\n};\nconst _hoisted_6 = {\n  class: \"text-body-2 text-medium-emphasis\"\n};\nconst _hoisted_7 = {\n  class: \"d-flex align-center\"\n};\nconst _hoisted_8 = {\n  class: \"text-body-2 text-medium-emphasis\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"d-flex align-center mt-2\"\n};\nconst _hoisted_10 = {\n  class: \"text-body-2 text-medium-emphasis\"\n};\nconst _hoisted_11 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_alert = _resolveComponent(\"v-alert\");\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_chip = _resolveComponent(\"v-chip\");\n  const _component_v_progress_linear = _resolveComponent(\"v-progress-linear\");\n  const _component_v_icon = _resolveComponent(\"v-icon\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_divider = _resolveComponent(\"v-divider\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_avatar = _resolveComponent(\"v-avatar\");\n  const _component_v_card_subtitle = _resolveComponent(\"v-card-subtitle\");\n  const _component_v_card_item = _resolveComponent(\"v-card-item\");\n  const _component_v_card_actions = _resolveComponent(\"v-card-actions\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_dialog = _resolveComponent(\"v-dialog\");\n  const _component_v_snackbar = _resolveComponent(\"v-snackbar\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_ctx.hasError ? (_openBlock(), _createBlock(_component_v_alert, {\n    key: 0,\n    type: \"error\",\n    dismissible: \"\",\n    variant: \"tonal\",\n    border: \"start\",\n    class: \"mb-4\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.errorMessage), 1)]),\n    _: 1\n  })) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", _hoisted_1, [_cache[5] || (_cache[5] = _createElementVNode(\"h1\", {\n    class: \"text-h4 font-weight-bold\"\n  }, \"Data Sources\", -1)), _createVNode(_component_v_spacer), _ctx.lastUpdated ? (_openBlock(), _createBlock(_component_v_chip, {\n    key: 0,\n    color: \"primary\",\n    size: \"small\",\n    variant: \"outlined\",\n    \"prepend-icon\": \"mdi-clock-outline\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" Last updated: \" + _toDisplayString($options.formatDate(_ctx.lastUpdated)), 1)]),\n    _: 1\n  })) : _createCommentVNode(\"\", true)]), _ctx.isLoading ? (_openBlock(), _createBlock(_component_v_progress_linear, {\n    key: 1,\n    indeterminate: \"\",\n    color: \"primary\",\n    class: \"mb-4\"\n  })) : !_ctx.dataSources || _ctx.dataSources.length === 0 ? (_openBlock(), _createBlock(_component_v_alert, {\n    key: 2,\n    type: \"info\",\n    variant: \"tonal\",\n    border: \"start\",\n    icon: \"mdi-information-outline\"\n  }, {\n    default: _withCtx(() => _cache[6] || (_cache[6] = [_createTextVNode(\" No data sources available. Click the refresh button to load data. \")])),\n    _: 1\n  })) : _createCommentVNode(\"\", true), _createVNode(_component_v_card, {\n    elevation: \"1\",\n    class: \"mb-6\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_card_title, {\n      class: \"py-3 px-6\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_icon, {\n        size: \"small\",\n        color: \"primary\",\n        class: \"mr-2\"\n      }, {\n        default: _withCtx(() => _cache[7] || (_cache[7] = [_createTextVNode(\"mdi-tools\")])),\n        _: 1\n      }), _cache[8] || (_cache[8] = _createTextVNode(\" Advanced Features \"))]),\n      _: 1\n    }), _createVNode(_component_v_divider), _createVNode(_component_v_card_text, {\n      class: \"py-4\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_row, null, {\n        default: _withCtx(() => [_createVNode(_component_v_col, {\n          cols: \"12\",\n          md: \"6\",\n          lg: \"3\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_btn, {\n            block: \"\",\n            color: \"primary\",\n            variant: \"tonal\",\n            \"prepend-icon\": \"mdi-database-refresh\",\n            onClick: $options.rebuildDatabase,\n            class: \"mb-2\"\n          }, {\n            default: _withCtx(() => _cache[9] || (_cache[9] = [_createTextVNode(\" Rebuild Database \")])),\n            _: 1\n          }, 8, [\"onClick\"])]),\n          _: 1\n        }), _createVNode(_component_v_col, {\n          cols: \"12\",\n          md: \"6\",\n          lg: \"3\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_btn, {\n            block: \"\",\n            color: \"primary\",\n            variant: \"tonal\",\n            \"prepend-icon\": \"mdi-database-plus\",\n            onClick: $options.initializeDatabase,\n            class: \"mb-2\"\n          }, {\n            default: _withCtx(() => _cache[10] || (_cache[10] = [_createTextVNode(\" Initialize Database \")])),\n            _: 1\n          }, 8, [\"onClick\"])]),\n          _: 1\n        }), _createVNode(_component_v_col, {\n          cols: \"12\",\n          md: \"6\",\n          lg: \"3\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_btn, {\n            block: \"\",\n            color: \"error\",\n            variant: \"tonal\",\n            \"prepend-icon\": \"mdi-delete\",\n            onClick: $options.deleteAllFiles,\n            class: \"mb-2\"\n          }, {\n            default: _withCtx(() => _cache[11] || (_cache[11] = [_createTextVNode(\" Delete All Files \")])),\n            _: 1\n          }, 8, [\"onClick\"])]),\n          _: 1\n        }), _createVNode(_component_v_col, {\n          cols: \"12\",\n          md: \"6\",\n          lg: \"3\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_btn, {\n            block: \"\",\n            color: \"warning\",\n            variant: \"tonal\",\n            \"prepend-icon\": \"mdi-heart-pulse\",\n            onClick: $options.runHealthChecks,\n            class: \"mb-2\"\n          }, {\n            default: _withCtx(() => _cache[12] || (_cache[12] = [_createTextVNode(\" Run Health Checks \")])),\n            _: 1\n          }, 8, [\"onClick\"])]),\n          _: 1\n        })]),\n        _: 1\n      })]),\n      _: 1\n    })]),\n    _: 1\n  }), _ctx.dataSources && _ctx.dataSources.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_v_row, null, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.sourcesWithStatus, (source, index) => {\n      return _openBlock(), _createBlock(_component_v_col, {\n        key: index,\n        cols: \"12\",\n        md: \"6\",\n        lg: \"4\",\n        class: \"d-flex\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_card, {\n          elevation: \"1\",\n          class: \"w-100\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_card_item, null, {\n            prepend: _withCtx(() => [_createVNode(_component_v_avatar, {\n              color: source.active ? 'success' : 'grey',\n              class: \"mr-3\",\n              size: \"42\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_icon, {\n                color: \"white\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(source.active ? 'mdi-database-check' : 'mdi-database-off'), 1)]),\n                _: 2\n              }, 1024)]),\n              _: 2\n            }, 1032, [\"color\"])]),\n            default: _withCtx(() => [_createVNode(_component_v_card_title, {\n              class: \"text-h6 pb-0\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(source.name), 1)]),\n              _: 2\n            }, 1024), _createVNode(_component_v_card_subtitle, {\n              class: \"pt-1\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_chip, {\n                color: source.active ? 'success' : 'error',\n                size: \"x-small\",\n                variant: \"tonal\",\n                class: \"mt-1\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(source.active ? 'Active' : 'Inactive'), 1)]),\n                _: 2\n              }, 1032, [\"color\"]), source.health ? (_openBlock(), _createBlock(_component_v_chip, {\n                key: 0,\n                color: source.health.status === 'working' ? 'success' : 'error',\n                size: \"x-small\",\n                variant: \"tonal\",\n                class: \"mt-1 ml-1\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(source.health.status === 'working' ? 'Healthy' : 'Unhealthy'), 1)]),\n                _: 2\n              }, 1032, [\"color\"])) : _createCommentVNode(\"\", true)]),\n              _: 2\n            }, 1024)]),\n            _: 2\n          }, 1024), _createVNode(_component_v_divider, {\n            class: \"mx-4\"\n          }), _createVNode(_component_v_card_text, {\n            class: \"pt-4\"\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_v_icon, {\n              size: \"small\",\n              color: \"grey\",\n              class: \"mr-2\"\n            }, {\n              default: _withCtx(() => _cache[13] || (_cache[13] = [_createTextVNode(\"mdi-link\")])),\n              _: 1\n            }), _createElementVNode(\"span\", _hoisted_4, _toDisplayString(source.url), 1)]), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_v_icon, {\n              size: \"small\",\n              color: \"grey\",\n              class: \"mr-2\"\n            }, {\n              default: _withCtx(() => _cache[14] || (_cache[14] = [_createTextVNode(\"mdi-calendar-clock\")])),\n              _: 1\n            }), _createElementVNode(\"span\", _hoisted_6, \" Last Scrape: \" + _toDisplayString($options.formatDate(source.lastScrape) || 'Never'), 1)]), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_v_icon, {\n              size: \"small\",\n              color: \"grey\",\n              class: \"mr-2\"\n            }, {\n              default: _withCtx(() => _cache[15] || (_cache[15] = [_createTextVNode(\"mdi-file-document-multiple\")])),\n              _: 1\n            }), _createElementVNode(\"span\", _hoisted_8, \" Proposals: \" + _toDisplayString(source.proposalCount || 0), 1)]), source.health && source.health.message ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createVNode(_component_v_icon, {\n              size: \"small\",\n              color: \"grey\",\n              class: \"mr-2\"\n            }, {\n              default: _withCtx(() => _cache[16] || (_cache[16] = [_createTextVNode(\"mdi-information\")])),\n              _: 1\n            }), _createElementVNode(\"span\", _hoisted_10, _toDisplayString(source.health.message), 1)])) : _createCommentVNode(\"\", true)]),\n            _: 2\n          }, 1024), _createVNode(_component_v_card_actions, {\n            class: \"px-4 pb-4\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_btn, {\n              color: \"primary\",\n              variant: \"tonal\",\n              \"prepend-icon\": \"mdi-refresh\",\n              onClick: $event => $options.triggerScrape(source.id),\n              loading: source.scraping,\n              disabled: !source.active,\n              size: \"small\"\n            }, {\n              default: _withCtx(() => _cache[17] || (_cache[17] = [_createTextVNode(\" Scrape Now \")])),\n              _: 2\n            }, 1032, [\"onClick\", \"loading\", \"disabled\"]), _createVNode(_component_v_btn, {\n              color: \"warning\",\n              variant: \"tonal\",\n              \"prepend-icon\": \"mdi-heart-pulse\",\n              onClick: $event => $options.checkSourceHealth(source.id),\n              loading: source.checkingHealth,\n              size: \"small\",\n              class: \"ml-2\"\n            }, {\n              default: _withCtx(() => _cache[18] || (_cache[18] = [_createTextVNode(\" Check Health \")])),\n              _: 2\n            }, 1032, [\"onClick\", \"loading\"]), _createVNode(_component_v_spacer), _createVNode(_component_v_btn, {\n              color: source.active ? 'error' : 'success',\n              variant: \"tonal\",\n              \"prepend-icon\": source.active ? 'mdi-close' : 'mdi-check',\n              onClick: $event => $options.toggleSourceStatus(source.id, !source.active),\n              size: \"small\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(source.active ? 'Deactivate' : 'Activate'), 1)]),\n              _: 2\n            }, 1032, [\"color\", \"prepend-icon\", \"onClick\"])]),\n            _: 2\n          }, 1024)]),\n          _: 2\n        }, 1024)]),\n        _: 2\n      }, 1024);\n    }), 128))]),\n    _: 1\n  })])) : _createCommentVNode(\"\", true), _createVNode(_component_v_dialog, {\n    modelValue: $data.confirmDialog.show,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.confirmDialog.show = $event),\n    \"max-width\": \"500\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_card, null, {\n      default: _withCtx(() => [_createVNode(_component_v_card_title, {\n        class: \"text-h5\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($data.confirmDialog.title), 1)]),\n        _: 1\n      }), _createVNode(_component_v_card_text, null, {\n        default: _withCtx(() => [_createElementVNode(\"p\", {\n          innerHTML: $data.confirmDialog.message\n        }, null, 8, _hoisted_11), $data.confirmDialog.requireInput ? (_openBlock(), _createBlock(_component_v_text_field, {\n          key: 0,\n          modelValue: $data.confirmDialog.input,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.confirmDialog.input = $event),\n          label: $data.confirmDialog.inputLabel,\n          variant: \"outlined\",\n          class: \"mt-4\"\n        }, null, 8, [\"modelValue\", \"label\"])) : _createCommentVNode(\"\", true)]),\n        _: 1\n      }), _createVNode(_component_v_card_actions, null, {\n        default: _withCtx(() => [_createVNode(_component_v_spacer), _createVNode(_component_v_btn, {\n          color: \"grey-darken-1\",\n          variant: \"text\",\n          onClick: _cache[1] || (_cache[1] = $event => $data.confirmDialog.show = false)\n        }, {\n          default: _withCtx(() => _cache[19] || (_cache[19] = [_createTextVNode(\"Cancel\")])),\n          _: 1\n        }), _createVNode(_component_v_btn, {\n          color: \"error\",\n          variant: \"tonal\",\n          onClick: $options.confirmAction\n        }, {\n          default: _withCtx(() => _cache[20] || (_cache[20] = [_createTextVNode(\"Confirm\")])),\n          _: 1\n        }, 8, [\"onClick\"])]),\n        _: 1\n      })]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"modelValue\"]), _createVNode(_component_v_snackbar, {\n    modelValue: $data.snackbar.show,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.snackbar.show = $event),\n    color: $data.snackbar.color,\n    timeout: $data.snackbar.timeout\n  }, {\n    actions: _withCtx(() => [_createVNode(_component_v_btn, {\n      variant: \"text\",\n      onClick: _cache[3] || (_cache[3] = $event => $data.snackbar.show = false)\n    }, {\n      default: _withCtx(() => _cache[21] || (_cache[21] = [_createTextVNode(\"Close\")])),\n      _: 1\n    })]),\n    default: _withCtx(() => [_createTextVNode(_toDisplayString($data.snackbar.text) + \" \", 1)]),\n    _: 1\n  }, 8, [\"modelValue\", \"color\", \"timeout\"])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_ctx","hasError","_createBlock","_component_v_alert","type","dismissible","variant","border","default","_withCtx","_createTextVNode","_toDisplayString","errorMessage","_","_createCommentVNode","_createElementVNode","_hoisted_1","_createVNode","_component_v_spacer","lastUpdated","_component_v_chip","color","size","$options","formatDate","isLoading","_component_v_progress_linear","indeterminate","dataSources","length","icon","_cache","_component_v_card","elevation","_component_v_card_title","_component_v_icon","_component_v_divider","_component_v_card_text","_component_v_row","_component_v_col","cols","md","lg","_component_v_btn","block","onClick","rebuildDatabase","initializeDatabase","deleteAllFiles","runHealthChecks","_hoisted_2","_Fragment","_renderList","sourcesWithStatus","source","index","_component_v_card_item","prepend","_component_v_avatar","active","name","_component_v_card_subtitle","health","status","_hoisted_3","_hoisted_4","url","_hoisted_5","_hoisted_6","lastScrape","_hoisted_7","_hoisted_8","proposalCount","message","_hoisted_9","_hoisted_10","_component_v_card_actions","$event","triggerScrape","id","loading","scraping","disabled","checkSourceHealth","checkingHealth","toggleSourceStatus","_component_v_dialog","modelValue","$data","confirmDialog","show","title","innerHTML","_hoisted_11","requireInput","_component_v_text_field","input","label","inputLabel","confirmAction","_component_v_snackbar","snackbar","timeout","actions","text"],"sources":["/Users/zach/Documents/Git/JPS-Prospect-Aggregate/src/dashboard/frontend/src/views/DataSources.vue"],"sourcesContent":["<template>\n  <div>\n    <v-alert\n      v-if=\"hasError\"\n      type=\"error\"\n      dismissible\n      variant=\"tonal\"\n      border=\"start\"\n      class=\"mb-4\"\n    >\n      {{ errorMessage }}\n    </v-alert>\n\n    <!-- Page header with title and last updated info -->\n    <div class=\"d-flex align-center mb-4\">\n      <h1 class=\"text-h4 font-weight-bold\">Data Sources</h1>\n      <v-spacer></v-spacer>\n      <v-chip\n        v-if=\"lastUpdated\"\n        color=\"primary\"\n        size=\"small\"\n        variant=\"outlined\"\n        prepend-icon=\"mdi-clock-outline\"\n      >\n        Last updated: {{ formatDate(lastUpdated) }}\n      </v-chip>\n    </div>\n\n    <!-- Loading state -->\n    <v-progress-linear\n      v-if=\"isLoading\"\n      indeterminate\n      color=\"primary\"\n      class=\"mb-4\"\n    ></v-progress-linear>\n    \n    <!-- No data state -->\n    <v-alert\n      v-else-if=\"!dataSources || dataSources.length === 0\"\n      type=\"info\"\n      variant=\"tonal\"\n      border=\"start\"\n      icon=\"mdi-information-outline\"\n    >\n      No data sources available. Click the refresh button to load data.\n    </v-alert>\n    \n    <!-- Advanced Features Section -->\n    <v-card elevation=\"1\" class=\"mb-6\">\n      <v-card-title class=\"py-3 px-6\">\n        <v-icon size=\"small\" color=\"primary\" class=\"mr-2\">mdi-tools</v-icon>\n        Advanced Features\n      </v-card-title>\n      \n      <v-divider></v-divider>\n      \n      <v-card-text class=\"py-4\">\n        <v-row>\n          <v-col cols=\"12\" md=\"6\" lg=\"3\">\n            <v-btn\n              block\n              color=\"primary\"\n              variant=\"tonal\"\n              prepend-icon=\"mdi-database-refresh\"\n              @click=\"rebuildDatabase\"\n              class=\"mb-2\"\n            >\n              Rebuild Database\n            </v-btn>\n          </v-col>\n          \n          <v-col cols=\"12\" md=\"6\" lg=\"3\">\n            <v-btn\n              block\n              color=\"primary\"\n              variant=\"tonal\"\n              prepend-icon=\"mdi-database-plus\"\n              @click=\"initializeDatabase\"\n              class=\"mb-2\"\n            >\n              Initialize Database\n            </v-btn>\n          </v-col>\n          \n          <v-col cols=\"12\" md=\"6\" lg=\"3\">\n            <v-btn\n              block\n              color=\"error\"\n              variant=\"tonal\"\n              prepend-icon=\"mdi-delete\"\n              @click=\"deleteAllFiles\"\n              class=\"mb-2\"\n            >\n              Delete All Files\n            </v-btn>\n          </v-col>\n          \n          <v-col cols=\"12\" md=\"6\" lg=\"3\">\n            <v-btn\n              block\n              color=\"warning\"\n              variant=\"tonal\"\n              prepend-icon=\"mdi-heart-pulse\"\n              @click=\"runHealthChecks\"\n              class=\"mb-2\"\n            >\n              Run Health Checks\n            </v-btn>\n          </v-col>\n        </v-row>\n      </v-card-text>\n    </v-card>\n    \n    <!-- Data sources grid -->\n    <div v-if=\"dataSources && dataSources.length > 0\">\n      <v-row>\n        <v-col\n          v-for=\"(source, index) in sourcesWithStatus\"\n          :key=\"index\"\n          cols=\"12\"\n          md=\"6\"\n          lg=\"4\"\n          class=\"d-flex\"\n        >\n          <v-card elevation=\"1\" class=\"w-100\">\n            <v-card-item>\n              <template v-slot:prepend>\n                <v-avatar\n                  :color=\"source.active ? 'success' : 'grey'\"\n                  class=\"mr-3\"\n                  size=\"42\"\n                >\n                  <v-icon color=\"white\">\n                    {{ source.active ? 'mdi-database-check' : 'mdi-database-off' }}\n                  </v-icon>\n                </v-avatar>\n              </template>\n              \n              <v-card-title class=\"text-h6 pb-0\">\n                {{ source.name }}\n              </v-card-title>\n              \n              <v-card-subtitle class=\"pt-1\">\n                <v-chip\n                  :color=\"source.active ? 'success' : 'error'\"\n                  size=\"x-small\"\n                  variant=\"tonal\"\n                  class=\"mt-1\"\n                >\n                  {{ source.active ? 'Active' : 'Inactive' }}\n                </v-chip>\n                \n                <v-chip\n                  v-if=\"source.health\"\n                  :color=\"source.health.status === 'working' ? 'success' : 'error'\"\n                  size=\"x-small\"\n                  variant=\"tonal\"\n                  class=\"mt-1 ml-1\"\n                >\n                  {{ source.health.status === 'working' ? 'Healthy' : 'Unhealthy' }}\n                </v-chip>\n              </v-card-subtitle>\n            </v-card-item>\n            \n            <v-divider class=\"mx-4\"></v-divider>\n            \n            <v-card-text class=\"pt-4\">\n              <div class=\"d-flex align-center mb-2\">\n                <v-icon size=\"small\" color=\"grey\" class=\"mr-2\">mdi-link</v-icon>\n                <span class=\"text-body-2 text-medium-emphasis text-truncate\">{{ source.url }}</span>\n              </div>\n              \n              <div class=\"d-flex align-center mb-2\">\n                <v-icon size=\"small\" color=\"grey\" class=\"mr-2\">mdi-calendar-clock</v-icon>\n                <span class=\"text-body-2 text-medium-emphasis\">\n                  Last Scrape: {{ formatDate(source.lastScrape) || 'Never' }}\n                </span>\n              </div>\n              \n              <div class=\"d-flex align-center\">\n                <v-icon size=\"small\" color=\"grey\" class=\"mr-2\">mdi-file-document-multiple</v-icon>\n                <span class=\"text-body-2 text-medium-emphasis\">\n                  Proposals: {{ source.proposalCount || 0 }}\n                </span>\n              </div>\n              \n              <div v-if=\"source.health && source.health.message\" class=\"d-flex align-center mt-2\">\n                <v-icon size=\"small\" color=\"grey\" class=\"mr-2\">mdi-information</v-icon>\n                <span class=\"text-body-2 text-medium-emphasis\">\n                  {{ source.health.message }}\n                </span>\n              </div>\n            </v-card-text>\n            \n            <v-card-actions class=\"px-4 pb-4\">\n              <v-btn\n                color=\"primary\"\n                variant=\"tonal\"\n                prepend-icon=\"mdi-refresh\"\n                @click=\"triggerScrape(source.id)\"\n                :loading=\"source.scraping\"\n                :disabled=\"!source.active\"\n                size=\"small\"\n              >\n                Scrape Now\n              </v-btn>\n              \n              <v-btn\n                color=\"warning\"\n                variant=\"tonal\"\n                prepend-icon=\"mdi-heart-pulse\"\n                @click=\"checkSourceHealth(source.id)\"\n                :loading=\"source.checkingHealth\"\n                size=\"small\"\n                class=\"ml-2\"\n              >\n                Check Health\n              </v-btn>\n              \n              <v-spacer></v-spacer>\n              \n              <v-btn\n                :color=\"source.active ? 'error' : 'success'\"\n                variant=\"tonal\"\n                :prepend-icon=\"source.active ? 'mdi-close' : 'mdi-check'\"\n                @click=\"toggleSourceStatus(source.id, !source.active)\"\n                size=\"small\"\n              >\n                {{ source.active ? 'Deactivate' : 'Activate' }}\n              </v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-col>\n      </v-row>\n    </div>\n    \n    <!-- Confirmation Dialog -->\n    <v-dialog v-model=\"confirmDialog.show\" max-width=\"500\">\n      <v-card>\n        <v-card-title class=\"text-h5\">{{ confirmDialog.title }}</v-card-title>\n        <v-card-text>\n          <p v-html=\"confirmDialog.message\"></p>\n          <v-text-field\n            v-if=\"confirmDialog.requireInput\"\n            v-model=\"confirmDialog.input\"\n            :label=\"confirmDialog.inputLabel\"\n            variant=\"outlined\"\n            class=\"mt-4\"\n          ></v-text-field>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"grey-darken-1\" variant=\"text\" @click=\"confirmDialog.show = false\">Cancel</v-btn>\n          <v-btn color=\"error\" variant=\"tonal\" @click=\"confirmAction\">Confirm</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    \n    <!-- Success/Error Snackbar -->\n    <v-snackbar v-model=\"snackbar.show\" :color=\"snackbar.color\" :timeout=\"snackbar.timeout\">\n      {{ snackbar.text }}\n      <template v-slot:actions>\n        <v-btn variant=\"text\" @click=\"snackbar.show = false\">Close</v-btn>\n      </template>\n    </v-snackbar>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport axios from 'axios'\n\n// Get the API base URL from environment or use default\nconst apiBaseUrl = process.env.VUE_APP_API_URL || 'http://localhost:5001/api'\n\nexport default {\n  name: 'DataSources',\n  data() {\n    return {\n      scrapingSourceIds: [],\n      checkingHealthSourceIds: [],\n      sourceHealthData: {},\n      confirmDialog: {\n        show: false,\n        title: '',\n        message: '',\n        requireInput: false,\n        inputLabel: '',\n        input: '',\n        action: null\n      },\n      snackbar: {\n        show: false,\n        text: '',\n        color: 'success',\n        timeout: 5000\n      }\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'isLoading',\n      'hasError',\n      'errorMessage',\n      'dataSources',\n      'lastUpdated'\n    ]),\n    // Add scraping status and health data to each data source\n    sourcesWithStatus() {\n      if (!this.dataSources) return []\n      return this.dataSources.map(source => ({\n        ...source,\n        scraping: this.scrapingSourceIds.includes(source.id),\n        checkingHealth: this.checkingHealthSourceIds.includes(source.id),\n        health: this.sourceHealthData[source.id] || null\n      }))\n    }\n  },\n  methods: {\n    formatDate(dateString) {\n      if (!dateString) return 'N/A'\n      const date = new Date(dateString)\n      return date.toLocaleString()\n    },\n    async triggerScrape(sourceId) {\n      this.scrapingSourceIds.push(sourceId)\n      \n      try {\n        await axios.post(`${apiBaseUrl}/data-sources/${sourceId}/scrape`)\n        this.showSnackbar('Scrape initiated successfully')\n        this.$store.dispatch('fetchDataSources')\n      } catch (error) {\n        console.error('Error triggering scrape:', error)\n        this.showSnackbar('Failed to trigger scrape: ' + error.message, 'error')\n      } finally {\n        this.scrapingSourceIds = this.scrapingSourceIds.filter(id => id !== sourceId)\n      }\n    },\n    async toggleSourceStatus(sourceId, active) {\n      try {\n        await axios.put(`${apiBaseUrl}/data-sources/${sourceId}`, { active })\n        this.showSnackbar(`Source ${active ? 'activated' : 'deactivated'} successfully`)\n        this.$store.dispatch('fetchDataSources')\n      } catch (error) {\n        console.error('Error updating source status:', error)\n        this.showSnackbar('Failed to update source status: ' + error.message, 'error')\n      }\n    },\n    async checkSourceHealth(sourceId) {\n      this.checkingHealthSourceIds.push(sourceId)\n      \n      try {\n        const response = await axios.post(`${apiBaseUrl}/scraper-status/${sourceId}/check`)\n        this.sourceHealthData = {\n          ...this.sourceHealthData,\n          [sourceId]: response.data\n        }\n        \n        const status = response.data.status === 'working' ? 'healthy' : 'unhealthy'\n        this.showSnackbar(`Source is ${status}`)\n      } catch (error) {\n        console.error('Error checking source health:', error)\n        this.showSnackbar('Failed to check source health: ' + error.message, 'error')\n      } finally {\n        this.checkingHealthSourceIds = this.checkingHealthSourceIds.filter(id => id !== sourceId)\n      }\n    },\n    showConfirmDialog(title, message, action, requireInput = false, inputLabel = '') {\n      this.confirmDialog = {\n        show: true,\n        title,\n        message,\n        requireInput,\n        inputLabel,\n        input: '',\n        action\n      }\n    },\n    confirmAction() {\n      if (this.confirmDialog.requireInput && \n          this.confirmDialog.input !== this.confirmDialog.inputLabel) {\n        this.showSnackbar('Please type the confirmation text exactly as shown', 'error')\n        return\n      }\n      \n      this.confirmDialog.show = false\n      if (typeof this.confirmDialog.action === 'function') {\n        this.confirmDialog.action()\n      }\n    },\n    showSnackbar(text, color = 'success', timeout = 5000) {\n      this.snackbar = {\n        show: true,\n        text,\n        color,\n        timeout\n      }\n    },\n    rebuildDatabase() {\n      this.showConfirmDialog(\n        'Rebuild Database',\n        'WARNING: This will rebuild the database from scratch.<br><br>' +\n        'This operation will:<br>' +\n        '1. Create a backup of the current database<br>' +\n        '2. Rebuild the database structure<br>' +\n        '3. Preserve your data<br><br>' +\n        'The application may need to be restarted after this operation.',\n        this.performDatabaseRebuild\n      )\n    },\n    async performDatabaseRebuild() {\n      try {\n        const response = await axios.post(`${apiBaseUrl}/rebuild-db`)\n        this.showSnackbar('Database rebuild started. The application may need to be restarted.')\n      } catch (error) {\n        console.error('Error rebuilding database:', error)\n        this.showSnackbar('Failed to rebuild database: ' + error.message, 'error')\n      }\n    },\n    initializeDatabase() {\n      this.showConfirmDialog(\n        'Initialize Database',\n        'WARNING: This will delete the current database and create a new one!<br><br>' +\n        'This operation will:<br>' +\n        '1. Delete ALL existing data<br>' +\n        '2. Create a new empty database<br>' +\n        '3. Initialize the data sources<br><br>' +\n        'This operation cannot be undone. All your data will be permanently lost.',\n        this.performDatabaseInitialization,\n        true,\n        'INIT'\n      )\n    },\n    async performDatabaseInitialization() {\n      try {\n        const response = await axios.post(`${apiBaseUrl}/init-db`)\n        this.showSnackbar('Database initialization started. The page will reload shortly.')\n        setTimeout(() => window.location.reload(), 5000)\n      } catch (error) {\n        console.error('Error initializing database:', error)\n        this.showSnackbar('Failed to initialize database: ' + error.message, 'error')\n      }\n    },\n    deleteAllFiles() {\n      this.showConfirmDialog(\n        'Delete All Files',\n        'WARNING: This is a destructive operation!<br><br>' +\n        'This will:<br>' +\n        '1. Delete ALL downloaded files<br>' +\n        '2. Delete ALL database backups<br>' +\n        '3. Delete the current database<br>' +\n        '4. Create a new empty database<br><br>' +\n        'This operation cannot be undone. All your data will be permanently lost.',\n        this.performDeleteAllFiles,\n        true,\n        'RESET'\n      )\n    },\n    async performDeleteAllFiles() {\n      try {\n        const response = await axios.post(`${apiBaseUrl}/reset-everything`)\n        this.showSnackbar('Reset initiated. The application will be reloaded shortly.')\n        setTimeout(() => window.location.reload(), 5000)\n      } catch (error) {\n        console.error('Error resetting everything:', error)\n        this.showSnackbar('Failed to reset: ' + error.message, 'error')\n      }\n    },\n    async runHealthChecks() {\n      try {\n        this.showSnackbar('Running health checks for all sources...', 'info')\n        \n        // Get all data sources\n        const sourcesResponse = await axios.get(`${apiBaseUrl}/data-sources`)\n        const sources = sourcesResponse.data\n        \n        if (!sources || sources.length === 0) {\n          this.showSnackbar('No data sources found', 'warning')\n          return\n        }\n        \n        // Run health checks for each source\n        const healthCheckPromises = sources.map(source => \n          axios.post(`${apiBaseUrl}/scraper-status/${source.id}/check`)\n            .then(response => {\n              const result = response.data\n              // Store health data for each source\n              this.sourceHealthData = {\n                ...this.sourceHealthData,\n                [source.id]: result\n              }\n              return result\n            })\n        )\n        \n        // Wait for all health checks to complete\n        const results = await Promise.all(healthCheckPromises)\n        \n        // Count successes and failures\n        const successes = results.filter(result => \n          result.success && result.status === 'working'\n        ).length\n        \n        const failures = results.filter(result => \n          result.success && result.status === 'not_working'\n        ).length\n        \n        const errors = results.filter(result => !result.success).length\n        \n        this.showSnackbar(`Health checks completed: ${successes} working, ${failures} not working, ${errors} errors.`)\n      } catch (error) {\n        console.error('Error running health checks:', error)\n        this.showSnackbar('Failed to run health checks: ' + error.message, 'error')\n      }\n    }\n  },\n  mounted() {\n    this.$store.dispatch('fetchDataSources')\n  }\n}\n</script>\n\n<style scoped>\n.w-100 {\n  width: 100%;\n}\n\n.text-truncate {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 100%;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}