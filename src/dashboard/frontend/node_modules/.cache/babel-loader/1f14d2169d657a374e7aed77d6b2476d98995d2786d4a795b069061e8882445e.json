{"ast":null,"code":"import { mapGetters } from 'vuex';\nexport default {\n  name: 'Dashboard',\n  data() {\n    return {\n      headers: [{\n        title: 'ID',\n        key: 'id',\n        align: 'start',\n        sortable: true\n      }, {\n        title: 'Title',\n        key: 'title',\n        align: 'start',\n        sortable: true\n      }, {\n        title: 'Source',\n        key: 'source',\n        align: 'start',\n        sortable: true\n      }, {\n        title: 'Date',\n        key: 'date',\n        align: 'start',\n        sortable: true\n      }, {\n        title: 'Status',\n        key: 'status',\n        align: 'start',\n        sortable: true\n      }],\n      confirmDialog: {\n        show: false,\n        title: '',\n        message: '',\n        requireInput: false,\n        inputLabel: '',\n        input: '',\n        action: null\n      },\n      snackbar: {\n        show: false,\n        text: '',\n        color: 'success',\n        timeout: 5000\n      },\n      // Proposal details dialog\n      proposalDialog: {\n        show: false,\n        proposal: null\n      },\n      itemsPerPage: 10,\n      page: 1\n    };\n  },\n  computed: {\n    ...mapGetters(['isLoading', 'hasError', 'errorMessage', 'dashboardData', 'lastUpdated']),\n    // Computed property for filtered proposals\n    filteredProposals() {\n      if (!this.dashboardData || !this.dashboardData.proposals) {\n        return [];\n      }\n      return this.dashboardData.proposals;\n    },\n    // Computed property for total count\n    totalCount() {\n      if (!this.dashboardData || !this.dashboardData.pagination) {\n        return 0;\n      }\n      return this.dashboardData.pagination.total_count || 0;\n    }\n  },\n  methods: {\n    // Fetch data on component mount\n    fetchData() {\n      this.$store.dispatch('fetchDashboardData', {\n        page: this.page,\n        perPage: this.itemsPerPage\n      });\n    },\n    // Format date for display\n    formatDate(dateString) {\n      if (!dateString) return 'N/A';\n      const date = new Date(dateString);\n      return date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      });\n    },\n    // Get color for status chip\n    getStatusColor(status) {\n      const statusColors = {\n        'Active': 'green',\n        'Pending': 'amber-darken-2',\n        'Completed': 'blue',\n        'Cancelled': 'red',\n        'Draft': 'grey'\n      };\n      return statusColors[status] || 'grey';\n    },\n    // Method to confirm action\n    confirmAction() {\n      if (this.confirmDialog.requireInput && this.confirmDialog.input !== 'CONFIRM') {\n        this.showSnackbar('Please type CONFIRM to proceed', 'error');\n        return;\n      }\n      if (typeof this.confirmDialog.action === 'function') {\n        this.confirmDialog.action();\n      }\n      this.confirmDialog.show = false;\n      this.confirmDialog.input = '';\n    },\n    // Method to show snackbar\n    showSnackbar(text, color = 'success') {\n      this.snackbar.text = text;\n      this.snackbar.color = color;\n      this.snackbar.show = true;\n    },\n    // Show proposal details\n    showProposalDetails(proposal) {\n      this.proposalDialog.proposal = proposal;\n      this.proposalDialog.show = true;\n    }\n  },\n  mounted() {\n    this.fetchData();\n  }\n};","map":{"version":3,"names":["mapGetters","name","data","headers","title","key","align","sortable","confirmDialog","show","message","requireInput","inputLabel","input","action","snackbar","text","color","timeout","proposalDialog","proposal","itemsPerPage","page","computed","filteredProposals","dashboardData","proposals","totalCount","pagination","total_count","methods","fetchData","$store","dispatch","perPage","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","getStatusColor","status","statusColors","confirmAction","showSnackbar","showProposalDetails","mounted"],"sources":["/Users/zach/Documents/Git/JPS-Prospect-Aggregate/src/dashboard/frontend/src/views/Dashboard.vue"],"sourcesContent":["<template>\n  <div>\n    <v-alert\n      v-if=\"hasError\"\n      type=\"error\"\n      dismissible\n      variant=\"tonal\"\n      border=\"start\"\n      class=\"mb-4\"\n    >\n      {{ errorMessage }}\n    </v-alert>\n\n    <!-- Page header with title and last updated info -->\n    <div class=\"d-flex align-center mb-4\">\n      <h1 class=\"text-h4 font-weight-bold\">Dashboard</h1>\n      <v-spacer></v-spacer>\n      <v-chip\n        v-if=\"lastUpdated\"\n        color=\"primary\"\n        size=\"small\"\n        variant=\"outlined\"\n        prepend-icon=\"mdi-clock-outline\"\n      >\n        Last updated: {{ formatDate(lastUpdated) }}\n      </v-chip>\n    </div>\n\n    <!-- Loading state -->\n    <v-progress-linear\n      v-if=\"isLoading\"\n      indeterminate\n      color=\"primary\"\n      class=\"mb-4\"\n    ></v-progress-linear>\n    \n    <!-- No data state -->\n    <v-alert\n      v-else-if=\"!dashboardData\"\n      type=\"info\"\n      variant=\"tonal\"\n      border=\"start\"\n      icon=\"mdi-information-outline\"\n    >\n      No data available. Click the refresh button to load data.\n    </v-alert>\n    \n    <!-- Dashboard content -->\n    <div v-else>\n      <!-- Debug info (remove in production) -->\n      <v-card v-if=\"dashboardData && dashboardData.pagination\" class=\"mb-4 pa-2\" color=\"grey-lighten-4\">\n        <pre>Page: {{ page }}, Items per page: {{ itemsPerPage }}, Total count: {{ totalCount }}</pre>\n        <pre>Pagination data: {{ JSON.stringify(dashboardData.pagination, null, 2) }}</pre>\n      </v-card>\n      \n      <!-- Summary Cards - Condensed into a single row -->\n      <v-row>\n        <v-col cols=\"12\" md=\"4\">\n          <v-card elevation=\"1\" class=\"h-100\">\n            <v-card-text class=\"d-flex flex-column align-center py-4\">\n              <v-icon\n                size=\"36\"\n                color=\"primary\"\n                class=\"mb-1\"\n              >mdi-file-document-multiple-outline</v-icon>\n              <span class=\"text-h6 font-weight-medium mb-1\">Total Proposals</span>\n              <span class=\"text-h4 font-weight-bold primary--text\">\n                {{ dashboardData.total_proposals || 0 }}\n              </span>\n            </v-card-text>\n          </v-card>\n        </v-col>\n        \n        <v-col cols=\"12\" md=\"4\">\n          <v-card elevation=\"1\" class=\"h-100\">\n            <v-card-text class=\"d-flex flex-column align-center py-4\">\n              <v-icon\n                size=\"36\"\n                color=\"success\"\n                class=\"mb-1\"\n              >mdi-database-check-outline</v-icon>\n              <span class=\"text-h6 font-weight-medium mb-1\">Active Sources</span>\n              <span class=\"text-h4 font-weight-bold success--text\">\n                {{ dashboardData.active_sources || 0 }}\n              </span>\n            </v-card-text>\n          </v-card>\n        </v-col>\n        \n        <v-col cols=\"12\" md=\"4\">\n          <v-card elevation=\"1\" class=\"h-100\">\n            <v-card-text class=\"d-flex flex-column align-center py-4\">\n              <v-icon\n                size=\"36\"\n                color=\"info\"\n                class=\"mb-1\"\n              >mdi-calendar-clock</v-icon>\n              <span class=\"text-h6 font-weight-medium mb-1\">Last Updated</span>\n              <span class=\"text-subtitle-1 font-weight-bold info--text\">\n                {{ formatDate(dashboardData.last_scrape) || 'Never' }}\n              </span>\n            </v-card-text>\n          </v-card>\n        </v-col>\n      </v-row>\n    </div>\n    \n    <!-- Confirmation Dialog -->\n    <v-dialog v-model=\"confirmDialog.show\" max-width=\"500\">\n      <v-card>\n        <v-card-title class=\"text-h5\">{{ confirmDialog.title }}</v-card-title>\n        <v-card-text>\n          <p v-html=\"confirmDialog.message\"></p>\n          <v-text-field\n            v-if=\"confirmDialog.requireInput\"\n            v-model=\"confirmDialog.input\"\n            :label=\"confirmDialog.inputLabel\"\n            variant=\"outlined\"\n            class=\"mt-4\"\n          ></v-text-field>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"grey-darken-1\" variant=\"text\" @click=\"confirmDialog.show = false\">Cancel</v-btn>\n          <v-btn color=\"error\" variant=\"tonal\" @click=\"confirmAction\">Confirm</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    \n    <!-- Success/Error Snackbar -->\n    <v-snackbar v-model=\"snackbar.show\" :color=\"snackbar.color\" :timeout=\"snackbar.timeout\">\n      {{ snackbar.text }}\n      <template v-slot:actions>\n        <v-btn variant=\"text\" @click=\"snackbar.show = false\">Close</v-btn>\n      </template>\n    </v-snackbar>\n    \n    <!-- Proposal Details Dialog -->\n    <v-dialog v-model=\"proposalDialog.show\" max-width=\"800px\">\n      <v-card>\n        <v-card-title class=\"py-3 px-6 text-h5\">\n          {{ proposalDialog.proposal ? proposalDialog.proposal.title : 'Proposal Details' }}\n          <v-spacer></v-spacer>\n          <v-btn icon @click=\"proposalDialog.show = false\">\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n        </v-card-title>\n        \n        <v-divider></v-divider>\n        \n        <v-card-text v-if=\"proposalDialog.proposal\" class=\"py-4\">\n          <v-row>\n            <v-col cols=\"12\" md=\"6\">\n              <p class=\"text-subtitle-2 font-weight-bold mb-1\">ID</p>\n              <p class=\"mb-3\">{{ proposalDialog.proposal.id }}</p>\n              \n              <p class=\"text-subtitle-2 font-weight-bold mb-1\">Source</p>\n              <p class=\"mb-3\">{{ proposalDialog.proposal.source }}</p>\n              \n              <p class=\"text-subtitle-2 font-weight-bold mb-1\">Date</p>\n              <p class=\"mb-3\">{{ formatDate(proposalDialog.proposal.date) }}</p>\n              \n              <p class=\"text-subtitle-2 font-weight-bold mb-1\">Status</p>\n              <v-chip\n                :color=\"getStatusColor(proposalDialog.proposal.status)\"\n                size=\"small\"\n                variant=\"tonal\"\n                class=\"mb-3\"\n              >\n                {{ proposalDialog.proposal.status }}\n              </v-chip>\n            </v-col>\n            \n            <v-col cols=\"12\" md=\"6\">\n              <p class=\"text-subtitle-2 font-weight-bold mb-1\">NAICS Code</p>\n              <p class=\"mb-3\">{{ proposalDialog.proposal.naicsCode || 'N/A' }}</p>\n              \n              <p class=\"text-subtitle-2 font-weight-bold mb-1\">Set-Aside</p>\n              <p class=\"mb-3\">{{ proposalDialog.proposal.setAside || 'N/A' }}</p>\n              \n              <p class=\"text-subtitle-2 font-weight-bold mb-1\">Agency</p>\n              <p class=\"mb-3\">{{ proposalDialog.proposal.agency || 'N/A' }}</p>\n              \n              <p class=\"text-subtitle-2 font-weight-bold mb-1\">Due Date</p>\n              <p class=\"mb-3\">{{ formatDate(proposalDialog.proposal.dueDate) || 'N/A' }}</p>\n            </v-col>\n            \n            <v-col cols=\"12\">\n              <p class=\"text-subtitle-2 font-weight-bold mb-1\">Description</p>\n              <p class=\"mb-3\">{{ proposalDialog.proposal.description || 'No description available.' }}</p>\n              \n              <v-btn\n                v-if=\"proposalDialog.proposal.url\"\n                color=\"primary\"\n                variant=\"tonal\"\n                prepend-icon=\"mdi-open-in-new\"\n                :href=\"proposalDialog.proposal.url\"\n                target=\"_blank\"\n                class=\"mt-2\"\n              >\n                View Original\n              </v-btn>\n            </v-col>\n          </v-row>\n        </v-card-text>\n        \n        <v-card-text v-else class=\"py-4 text-center\">\n          <v-progress-circular indeterminate color=\"primary\"></v-progress-circular>\n          <p class=\"mt-2\">Loading proposal details...</p>\n        </v-card-text>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'Dashboard',\n  data() {\n    return {\n      headers: [\n        { title: 'ID', key: 'id', align: 'start', sortable: true },\n        { title: 'Title', key: 'title', align: 'start', sortable: true },\n        { title: 'Source', key: 'source', align: 'start', sortable: true },\n        { title: 'Date', key: 'date', align: 'start', sortable: true },\n        { title: 'Status', key: 'status', align: 'start', sortable: true }\n      ],\n      confirmDialog: {\n        show: false,\n        title: '',\n        message: '',\n        requireInput: false,\n        inputLabel: '',\n        input: '',\n        action: null\n      },\n      snackbar: {\n        show: false,\n        text: '',\n        color: 'success',\n        timeout: 5000\n      },\n      // Proposal details dialog\n      proposalDialog: {\n        show: false,\n        proposal: null\n      },\n      itemsPerPage: 10,\n      page: 1\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'isLoading',\n      'hasError',\n      'errorMessage',\n      'dashboardData',\n      'lastUpdated'\n    ]),\n    // Computed property for filtered proposals\n    filteredProposals() {\n      if (!this.dashboardData || !this.dashboardData.proposals) {\n        return []\n      }\n      \n      return this.dashboardData.proposals\n    },\n    // Computed property for total count\n    totalCount() {\n      if (!this.dashboardData || !this.dashboardData.pagination) {\n        return 0\n      }\n      \n      return this.dashboardData.pagination.total_count || 0\n    }\n  },\n  methods: {\n    // Fetch data on component mount\n    fetchData() {\n      this.$store.dispatch('fetchDashboardData', {\n        page: this.page,\n        perPage: this.itemsPerPage\n      })\n    },\n    // Format date for display\n    formatDate(dateString) {\n      if (!dateString) return 'N/A'\n      \n      const date = new Date(dateString)\n      return date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      })\n    },\n    // Get color for status chip\n    getStatusColor(status) {\n      const statusColors = {\n        'Active': 'green',\n        'Pending': 'amber-darken-2',\n        'Completed': 'blue',\n        'Cancelled': 'red',\n        'Draft': 'grey'\n      }\n      \n      return statusColors[status] || 'grey'\n    },\n    // Method to confirm action\n    confirmAction() {\n      if (this.confirmDialog.requireInput && this.confirmDialog.input !== 'CONFIRM') {\n        this.showSnackbar('Please type CONFIRM to proceed', 'error')\n        return\n      }\n      \n      if (typeof this.confirmDialog.action === 'function') {\n        this.confirmDialog.action()\n      }\n      \n      this.confirmDialog.show = false\n      this.confirmDialog.input = ''\n    },\n    // Method to show snackbar\n    showSnackbar(text, color = 'success') {\n      this.snackbar.text = text\n      this.snackbar.color = color\n      this.snackbar.show = true\n    },\n    // Show proposal details\n    showProposalDetails(proposal) {\n      this.proposalDialog.proposal = proposal\n      this.proposalDialog.show = true\n    }\n  },\n  mounted() {\n    this.fetchData()\n  }\n}\n</script>\n\n<style scoped>\n.max-width-300 {\n  max-width: 300px;\n}\n\n.h-100 {\n  height: 100%;\n}\n\n.proposal-row {\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.proposal-row:hover {\n  background-color: rgba(0, 0, 0, 0.05);\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}