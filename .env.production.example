# Production Environment Configuration Example
# Copy this file to .env.production and update all values
# DO NOT commit .env.production to version control

# Database (REQUIRED - Change this!)
DB_PASSWORD=CHANGE_THIS_STRONG_PASSWORD

# Database URLs (Docker will use these automatically)
DATABASE_URL=postgresql://jps_user:${DB_PASSWORD}@db:5432/jps_prospects
USER_DATABASE_URL=postgresql://jps_user:${DB_PASSWORD}@db:5432/jps_users

# Application (REQUIRED - Change this!)
SECRET_KEY=CHANGE_THIS_RANDOM_SECRET_KEY
FLASK_ENV=production
FLASK_APP=run.py
HOST=0.0.0.0
PORT=5001

# File settings
FILE_FRESHNESS_SECONDS=86400

# Security Settings
SESSION_COOKIE_SECURE=True
SESSION_COOKIE_HTTPONLY=True
SESSION_COOKIE_SAMESITE=Lax
PERMANENT_SESSION_LIFETIME=3600

# Application Settings
DEBUG=False
TESTING=False
WTF_CSRF_ENABLED=True

# Logging
LOG_LEVEL=INFO
LOG_FILE=/opt/jps/logs/app.log

# File Upload Settings
MAX_CONTENT_LENGTH=104857600
UPLOAD_FOLDER=/opt/jps/uploads

# Scraper Configuration
SCRAPER_TIMEOUT=120
SCRAPER_RETRY_ATTEMPTS=3
PLAYWRIGHT_TIMEOUT=60000

# LLM Configuration
OLLAMA_BASE_URL=http://localhost:11434
OLLAMA_MODEL=qwen3:latest

# Performance Settings
SQLALCHEMY_POOL_SIZE=10
SQLALCHEMY_POOL_RECYCLE=3600
SQLALCHEMY_MAX_OVERFLOW=20

# Feature Flags
ENABLE_LLM_ENHANCEMENT=True
ENABLE_DUPLICATE_DETECTION=True
ENABLE_AUTO_ARCHIVAL=True

# Deployment Settings
WORKERS=12
TIMEOUT=120

# Cloudflare Tunnel Configuration (optional)
# Get this token from: Cloudflare Dashboard → Zero Trust → Tunnels
# CLOUDFLARE_TUNNEL_TOKEN=your-cloudflare-tunnel-token-here